"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7034],{35433:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a=JSON.parse('{"key":"v-2d68d99c","path":"/zh/vuepress-next/reference/plugin/container.html","title":"container","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"容器语法","slug":"容器语法","link":"#容器语法","children":[]},{"level":2,"title":"配置项","slug":"配置项","link":"#配置项","children":[{"level":3,"title":"type","slug":"type","link":"#type","children":[]},{"level":3,"title":"locales","slug":"locales","link":"#locales","children":[]},{"level":3,"title":"before","slug":"before","link":"#before","children":[]},{"level":3,"title":"after","slug":"after","link":"#after","children":[]},{"level":3,"title":"render","slug":"render","link":"#render","children":[]},{"level":3,"title":"validate","slug":"validate","link":"#validate","children":[]},{"level":3,"title":"marker","slug":"marker","link":"#marker","children":[]}]}],"git":{"createdTime":1635758933000,"updatedTime":1635758933000,"contributors":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn","commits":1}]},"copyright":"","filePathRelative":"zh/vuepress-next/reference/plugin/container.md","content":"# container\\n\\n<NpmBadge package=\\"@vuepress/plugin-container\\" />\\n\\n为你的 VuePress 站点注册自定义容器。\\n\\n该插件简化了 [markdown-it-container](https://github.com/markdown-it/markdown-it-container) 的使用方法，但同时也保留了其原本的能力。\\n\\n默认主题的 [自定义容器](../default-theme/markdown.md#自定义容器) 就是由该插件支持的。\\n\\n## 安装\\n\\n```bash\\nnpm i -D @vuepress/plugin-container@next\\n```\\n\\n## 容器语法\\n\\n```md\\n::: <type> [info]\\n[content]\\n:::\\n```\\n\\n- `type` 是必需的，应通过 [type](#type) 配置项来指定。\\n- `info` 是可选的，其默认值可以通过 [locales](#locales) 的 `defaultInfo` 配置项来指定。\\n- `content` 可是任何合法的 Markdown 内容。\\n\\n::: tip\\n该插件可以被多次使用，以便支持不同类型的容器。\\n:::\\n\\n## 配置项\\n\\n### type\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  容器的类型。\\n\\n  它将会被用作 [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api) 的 `name` 参数。\\n\\n### locales\\n\\n- 类型： `Record<string, { defaultInfo: string }>`\\n\\n- 详情：\\n\\n  容器在不同 locales 下的默认 `info` 。\\n\\n  如果没有指定该配置项，默认 `info` 会使用大写的 [type](#type) 。\\n\\n- 示例：\\n\\n```js\\nmodule.exports = {\\n  plugins: [\\n    [\\n      \'@vuepress/container\',\\n      {\\n        type: \'tip\',\\n        locales: {\\n          \'/\': {\\n            defaultInfo: \'TIP\',\\n          },\\n          \'/zh/\': {\\n            defaultInfo: \'提示\',\\n          },\\n        },\\n      },\\n    ],\\n  ],\\n}\\n```\\n\\n- 参考：\\n  - [指南 > 多语言支持](../../guide/i18n.md)\\n\\n### before\\n\\n- 类型： `(info: string) => string`\\n\\n- 默认值：\\n\\n```ts\\n(info: string): string =>\\n  `<div class=\\"custom-container ${type}\\">${info ? `<p class=\\"custom-container-title\\">${info}</p>` : \'\'}\\\\n`\\n```\\n\\n- 详情：\\n\\n  一个用于渲染容器起始标签的函数。\\n\\n  第一个参数是 [容器语法](#容器语法) 的 `info` 部分。\\n\\n  如果你没有设置 [after](#after) 配置项，则该配置项也不会生效。\\n\\n### after\\n\\n- 类型： `(info: string) => string`\\n\\n- 默认值：\\n\\n```ts\\n(): string => \'</div>\\\\n\'\\n```\\n\\n- 详情：\\n\\n  一个用于渲染容器结束标签的函数。\\n\\n  第一个参数是 [容器语法](#容器语法) 的 `info` 部分。\\n\\n  如果你没有设置 [before](#before) 配置项，则该配置项也不会生效。\\n\\n### render\\n\\n- 类型：\\n\\n```ts\\ntype MarkdownItContainerRenderFunction = (\\n  tokens: Token[],\\n  index: number,\\n  options: any,\\n  env: MarkdownEnv,\\n  self: Renderer\\n) => string\\n```\\n\\n- 详情：\\n\\n  [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api) 的 `render` 配置项。\\n\\n  该插件使用了一个默认的 `render` 函数。但如果你指定了该配置项，那么默认的 `render` 函数就会被替换掉，此时 [locales](#locales) 、 [before](#before) 和 [after](#after) 配置项都会被忽略。\\n\\n### validate\\n\\n- 类型： `(params: string) => boolean`\\n\\n- 详情：\\n\\n  [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api) 的 `validate` 配置项。\\n\\n### marker\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api) 的 `marker` 配置项。\\n","author":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn"}],"top":false,"length":578,"words":578,"readingTime":1.93}')},73130:(n,e,s)=>{s.r(e),s.d(e,{default:()=>Z});var a=s(1863);const l=(0,a._)("h1",{id:"container",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),(0,a.Uk)(" container")],-1),r=(0,a._)("p",null,"为你的 VuePress 站点注册自定义容器。",-1),o={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},i=(0,a._)("h2",{id:"安装",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),(0,a.Uk)(" 安装")],-1),t={class:"code-enhance"},p=(0,a.uE)('<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/plugin-container@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),c=(0,a._)("h2",{id:"容器语法",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#容器语法","aria-hidden":"true"},"#"),(0,a.Uk)(" 容器语法")],-1),d={class:"code-enhance"},u=(0,a.uE)('<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">::: &lt;type&gt; [</span><span style="color:#CE9178;">info</span><span style="color:#D4D4D4;">]</span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">content</span><span style="color:#D4D4D4;">]</span></span>\n<span class="line"><span style="color:#D4D4D4;">:::</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),D=(0,a.uE)('<ul><li><code>type</code> 是必需的，应通过 <a href="#type">type</a> 配置项来指定。</li><li><code>info</code> 是可选的，其默认值可以通过 <a href="#locales">locales</a> 的 <code>defaultInfo</code> 配置项来指定。</li><li><code>content</code> 可是任何合法的 Markdown 内容。</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>该插件可以被多次使用，以便支持不同类型的容器。</p></div><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>',4),y=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),m=(0,a._)("p",null,"详情：",-1),h=(0,a._)("p",null,"容器的类型。",-1),v={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},k=(0,a._)("code",null,"name",-1),f=(0,a.uE)('<h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>类型： <code>Record&lt;string, { defaultInfo: string }&gt;</code></p></li><li><p>详情：</p><p>容器在不同 locales 下的默认 <code>info</code> 。</p><p>如果没有指定该配置项，默认 <code>info</code> 会使用大写的 <a href="#type">type</a> 。</p></li><li><p>示例：</p></li></ul>',2),g={class:"code-enhance"},b=(0,a.uE)('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>\n<span class="line"><span style="color:#D4D4D4;">    [</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#CE9178;">&#39;@vuepress/container&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;tip&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">locales:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;TIP&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">          },</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;/zh/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;提示&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">          },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        },</span></span>\n<span class="line"><span style="color:#D4D4D4;">      },</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),E=(0,a._)("h3",{id:"before",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#before","aria-hidden":"true"},"#"),(0,a.Uk)(" before")],-1),_=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"(info: string) => string")])]),(0,a._)("li",null,[(0,a._)("p",null,"默认值：")])],-1),C={class:"code-enhance"},w=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">`&lt;div class=&quot;custom-container </span><span style="color:#569CD6;">${</span><span style="color:#9CDCFE;">type</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;&gt;</span><span style="color:#569CD6;">${</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;"> ? </span><span style="color:#CE9178;">`&lt;p class=&quot;custom-container-title&quot;&gt;</span><span style="color:#569CD6;">${</span><span style="color:#9CDCFE;">info</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/p&gt;`</span><span style="color:#D4D4D4;"> : </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#569CD6;">}</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">`</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',1),U=(0,a.uE)('<ul><li><p>详情：</p><p>一个用于渲染容器起始标签的函数。</p><p>第一个参数是 <a href="#%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95">容器语法</a> 的 <code>info</code> 部分。</p><p>如果你没有设置 <a href="#after">after</a> 配置项，则该配置项也不会生效。</p></li></ul><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after" aria-hidden="true">#</a> after</h3><ul><li><p>类型： <code>(info: string) =&gt; string</code></p></li><li><p>默认值：</p></li></ul>',3),x={class:"code-enhance"},B=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&lt;/div&gt;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),F=(0,a.uE)('<ul><li><p>详情：</p><p>一个用于渲染容器结束标签的函数。</p><p>第一个参数是 <a href="#%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95">容器语法</a> 的 <code>info</code> 部分。</p><p>如果你没有设置 <a href="#before">before</a> 配置项，则该配置项也不会生效。</p></li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><ul><li>类型：</li></ul>',3),A={class:"code-enhance"},I=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownItContainerRenderFunction</span><span style="color:#D4D4D4;"> = (</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Token</span><span style="color:#D4D4D4;">[],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">env</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">MarkdownEnv</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Renderer</span></span>\n<span class="line"><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),W=(0,a._)("p",null,"详情：",-1),z={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},R=(0,a._)("code",null,"render",-1),T=(0,a._)("p",null,[(0,a.Uk)("该插件使用了一个默认的 "),(0,a._)("code",null,"render"),(0,a.Uk)(" 函数。但如果你指定了该配置项，那么默认的 "),(0,a._)("code",null,"render"),(0,a.Uk)(" 函数就会被替换掉，此时 "),(0,a._)("a",{href:"#locales"},"locales"),(0,a.Uk)(" 、 "),(0,a._)("a",{href:"#before"},"before"),(0,a.Uk)(" 和 "),(0,a._)("a",{href:"#after"},"after"),(0,a.Uk)(" 配置项都会被忽略。")],-1),M=(0,a._)("h3",{id:"validate",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#validate","aria-hidden":"true"},"#"),(0,a.Uk)(" validate")],-1),P=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"(params: string) => boolean")])],-1),$=(0,a._)("p",null,"详情：",-1),q={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},N=(0,a._)("code",null,"validate",-1),j=(0,a._)("h3",{id:"marker",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#marker","aria-hidden":"true"},"#"),(0,a.Uk)(" marker")],-1),L=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),V=(0,a._)("p",null,"详情：",-1),J={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},O=(0,a._)("code",null,"marker",-1),S={},Z=(0,s(94598).Z)(S,[["render",function(n,e){const s=(0,a.up)("NpmBadge"),S=(0,a.up)("ExternalLinkIcon"),Z=(0,a.up)("RouterLink"),G=(0,a.up)("CodeCopyButton");return(0,a.wg)(),(0,a.iD)("div",null,[l,(0,a.Wm)(s,{package:"@vuepress/plugin-container"}),r,(0,a._)("p",null,[(0,a.Uk)("该插件简化了 "),(0,a._)("a",o,[(0,a.Uk)("markdown-it-container"),(0,a.Wm)(S)]),(0,a.Uk)(" 的使用方法，但同时也保留了其原本的能力。")]),(0,a._)("p",null,[(0,a.Uk)("默认主题的 "),(0,a.Wm)(Z,{to:"/zh/vuepress-next/reference/default-theme/markdown.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%B9%E5%99%A8"},{default:(0,a.w5)((()=>[(0,a.Uk)("自定义容器")])),_:1}),(0,a.Uk)(" 就是由该插件支持的。")]),i,(0,a._)("div",t,[p,(0,a.Wm)(G)]),c,(0,a._)("div",d,[u,(0,a.Wm)(G)]),D,(0,a._)("ul",null,[y,(0,a._)("li",null,[m,h,(0,a._)("p",null,[(0,a.Uk)("它将会被用作 "),(0,a._)("a",v,[(0,a.Uk)("markdown-it-container"),(0,a.Wm)(S)]),(0,a.Uk)(" 的 "),k,(0,a.Uk)(" 参数。")])])]),f,(0,a._)("div",g,[b,(0,a.Wm)(G)]),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("参考： "),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Z,{to:"/zh/vuepress-next/guide/i18n.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("指南 > 多语言支持")])),_:1})])])])]),E,_,(0,a._)("div",C,[w,(0,a.Wm)(G)]),U,(0,a._)("div",x,[B,(0,a.Wm)(G)]),F,(0,a._)("div",A,[I,(0,a.Wm)(G)]),(0,a._)("ul",null,[(0,a._)("li",null,[W,(0,a._)("p",null,[(0,a._)("a",z,[(0,a.Uk)("markdown-it-container"),(0,a.Wm)(S)]),(0,a.Uk)(" 的 "),R,(0,a.Uk)(" 配置项。")]),T])]),M,(0,a._)("ul",null,[P,(0,a._)("li",null,[$,(0,a._)("p",null,[(0,a._)("a",q,[(0,a.Uk)("markdown-it-container"),(0,a.Wm)(S)]),(0,a.Uk)(" 的 "),N,(0,a.Uk)(" 配置项。")])])]),j,(0,a._)("ul",null,[L,(0,a._)("li",null,[V,(0,a._)("p",null,[(0,a._)("a",J,[(0,a.Uk)("markdown-it-container"),(0,a.Wm)(S)]),(0,a.Uk)(" 的 "),O,(0,a.Uk)(" 配置项。")])])])])}]])}}]);