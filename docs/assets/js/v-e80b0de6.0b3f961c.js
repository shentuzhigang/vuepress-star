"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6548],{54981:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s=JSON.parse('{"key":"v-e80b0de6","path":"/zh/guide/component/code-group.html","title":"CodeGroup","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"详情","slug":"详情","link":"#详情","children":[]},{"level":2,"title":"CodeGroupItem","slug":"codegroupitem","link":"#codegroupitem","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"详情","slug":"详情-1","link":"#详情-1","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1638003515000,"updatedTime":1639901643000,"contributors":[{"name":"Starzkg","email":"1600337300@qq.com","commits":2}]},"copyright":"","filePathRelative":"zh/guide/component/code-group.md","content":"# CodeGroup\\n\\n在MarkDown中可用的代码块分组\\n\\n## 详情\\n\\n[CodeGroupItem](components.md#codegroupitem) 组件的Wrapper\\n\\n## CodeGroupItem\\n在MarkDown中可用的代码块分组项\\n\\n## 属性\\ntitle <Badge text=\\"必填\\" type=\\"danger\\" />\\n- 类型： `string`\\n\\nactive\\n- 类型： `boolean`\\n- 默认值： `false`\\n\\n## 详情\\n\\n该组件必须放置在 [CodeGroup](#codegroup) 组件的内部。\\n\\n可以通过 `active` Prop 来设置初始激活的元素。如果不设置，默认激活第一个元素。\\n\\n## 使用\\n请使用 `<CodeGroup />` 包裹 `<CodeGroupItem />`。\\n\\n对于每个 `<CodeGroupItem />`，你需要设置 `title` 属性作为选项卡的标题，并仅在选项卡内放置一个代码块。你还可以在其中一个 `<CodeGroupItem />` 上设置 active 属性使其默认激活。\\n\\n::: tip\\n\\n你需要在每个 `<CodeGroupItem />` 之间放置一个空行，否则 VuePress 可能无法正确的解析它们。\\n\\n:::\\n\\n## 示例\\n\\n输入：\\n\\n````markdown\\n<CodeGroup>\\n<CodeGroupItem title=\\"yarn\\">\\n```bash\\n  yarn add -D vuepress-theme-star\\n```\\n</CodeGroupItem>\\n<CodeGroupItem title=\\"npm\\" active>\\n```bash\\nnpm i -D vuepress-theme-star\\n```\\n</CodeGroupItem>\\n</CodeGroup>\\n````\\n\\n输出：\\n\\n<CodeGroup>\\n  <CodeGroupItem title=\\"yarn\\">\\n\\n```bash\\nyarn add -D vuepress-theme-star\\n```\\n  </CodeGroupItem>\\n\\n  <CodeGroupItem title=\\"npm\\" active>\\n\\n```bash\\nnpm i -D vuepress-theme-star\\n```\\n  </CodeGroupItem>\\n</CodeGroup>\\n","author":[{"name":"Starzkg","email":"1600337300@qq.com"}],"top":false,"length":254,"words":254,"readingTime":0.85}')},28973:(e,n,a)=>{a.r(n),a.d(n,{default:()=>b});var s=a(1863);const l=(0,s._)("h1",{id:"codegroup",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#codegroup","aria-hidden":"true"},"#"),(0,s.Uk)(" CodeGroup")],-1),o=(0,s._)("p",null,"在MarkDown中可用的代码块分组",-1),t=(0,s._)("h2",{id:"详情",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#详情","aria-hidden":"true"},"#"),(0,s.Uk)(" 详情")],-1),d=(0,s._)("h2",{id:"codegroupitem",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#codegroupitem","aria-hidden":"true"},"#"),(0,s.Uk)(" CodeGroupItem")],-1),r=(0,s._)("p",null,"在MarkDown中可用的代码块分组项",-1),i=(0,s._)("h2",{id:"属性",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),(0,s.Uk)(" 属性")],-1),p=(0,s.uE)('<ul><li>类型： <code>string</code></li></ul><p>active</p><ul><li>类型： <code>boolean</code></li><li>默认值： <code>false</code></li></ul><h2 id="详情-1" tabindex="-1"><a class="header-anchor" href="#详情-1" aria-hidden="true">#</a> 详情</h2><p>该组件必须放置在 <a href="#codegroup">CodeGroup</a> 组件的内部。</p><p>可以通过 <code>active</code> Prop 来设置初始激活的元素。如果不设置，默认激活第一个元素。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>请使用 <code>&lt;CodeGroup /&gt;</code> 包裹 <code>&lt;CodeGroupItem /&gt;</code>。</p><p>对于每个 <code>&lt;CodeGroupItem /&gt;</code>，你需要设置 <code>title</code> 属性作为选项卡的标题，并仅在选项卡内放置一个代码块。你还可以在其中一个 <code>&lt;CodeGroupItem /&gt;</code> 上设置 active 属性使其默认激活。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>你需要在每个 <code>&lt;CodeGroupItem /&gt;</code> 之间放置一个空行，否则 VuePress 可能无法正确的解析它们。</p></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>输入：</p>',12),c={class:"code-enhance"},u=(0,s.uE)('<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">&lt;CodeGroup&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;CodeGroupItem title=&quot;yarn&quot;&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">```bash</span></span>\n<span class="line"><span style="color:#D4D4D4;">  yarn add -D vuepress-theme-star</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;/CodeGroupItem&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;CodeGroupItem title=&quot;npm&quot; active&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">```bash</span></span>\n<span class="line"><span style="color:#D4D4D4;">npm i -D vuepress-theme-star</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;/CodeGroupItem&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;/CodeGroup&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),m=(0,s._)("p",null,"输出：",-1),h={class:"code-enhance"},v=(0,s._)("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[(0,s._)("pre",{class:"shiki",style:{"background-color":"#1E1E1E"}},[(0,s._)("code",null,[(0,s._)("span",{class:"line"},[(0,s._)("span",{style:{color:"#D4D4D4"}},"yarn add -D vuepress-theme-star")]),(0,s.Uk)("\n"),(0,s._)("span",{class:"line"})])]),(0,s._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s._)("div",{class:"line-number"})])],-1),g={class:"code-enhance"},D=(0,s._)("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[(0,s._)("pre",{class:"shiki",style:{"background-color":"#1E1E1E"}},[(0,s._)("code",null,[(0,s._)("span",{class:"line"},[(0,s._)("span",{style:{color:"#D4D4D4"}},"npm i -D vuepress-theme-star")]),(0,s.Uk)("\n"),(0,s._)("span",{class:"line"})])]),(0,s._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s._)("div",{class:"line-number"})])],-1),C={},b=(0,a(94598).Z)(C,[["render",function(e,n){const a=(0,s.up)("RouterLink"),C=(0,s.up)("Badge"),b=(0,s.up)("CodeCopyButton"),G=(0,s.up)("CodeGroupItem"),_=(0,s.up)("CodeGroup");return(0,s.wg)(),(0,s.iD)("div",null,[l,o,t,(0,s._)("p",null,[(0,s.Wm)(a,{to:"/zh/guide/component/components.html#codegroupitem"},{default:(0,s.w5)((()=>[(0,s.Uk)("CodeGroupItem")])),_:1}),(0,s.Uk)(" 组件的Wrapper")]),d,r,i,(0,s._)("p",null,[(0,s.Uk)("title "),(0,s.Wm)(C,{text:"必填",type:"danger"})]),p,(0,s._)("div",c,[u,(0,s.Wm)(b)]),m,(0,s.Wm)(_,null,{default:(0,s.w5)((()=>[(0,s.Wm)(G,{title:"yarn"},{default:(0,s.w5)((()=>[(0,s._)("div",h,[v,(0,s.Wm)(b)])])),_:1}),(0,s.Wm)(G,{title:"npm",active:""},{default:(0,s.w5)((()=>[(0,s._)("div",g,[D,(0,s.Wm)(b)])])),_:1})])),_:1})])}]])}}]);