"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2706],{23369:(e,r,t)=>{t.r(r),t.d(r,{data:()=>n});const n=JSON.parse('{"key":"v-51cda127","path":"/zh/vuepress-next/guide/","title":"介绍","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"它是如何工作的？","slug":"它是如何工作的","link":"#它是如何工作的","children":[]},{"level":2,"title":"为什么不是 …?","slug":"为什么不是","link":"#为什么不是","children":[{"level":3,"title":"Nuxt","slug":"nuxt","link":"#nuxt","children":[]},{"level":3,"title":"VitePress","slug":"vitepress","link":"#vitepress","children":[]},{"level":3,"title":"Docsify / Docute","slug":"docsify-docute","link":"#docsify-docute","children":[]},{"level":3,"title":"Hexo","slug":"hexo","link":"#hexo","children":[]},{"level":3,"title":"GitBook","slug":"gitbook","link":"#gitbook","children":[]}]}],"git":{"createdTime":1635758933000,"updatedTime":1635758933000,"contributors":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn","commits":1}]},"copyright":"","filePathRelative":"zh/vuepress-next/guide/README.md","content":"# 介绍\\n\\nVuePress 是一个以 Markdown 为中心的静态网站生成器。你可以使用 [Markdown](https://zh.wikipedia.org/wiki/Markdown) 来书写内容（如文档、博客等），然后 VuePress 会帮助你生成一个静态网站来展示它们。\\n\\nVuePress 诞生的初衷是为了支持 Vue.js 及其子项目的文档需求，但是现在它已经在帮助大量用户构建他们的文档、博客和其他静态网站。\\n\\n## 它是如何工作的？\\n\\n一个 VuePress 站点本质上是一个由 [Vue](https://v3.vuejs.org/) 和 [Vue Router](https://next.router.vuejs.org) 驱动的单页面应用 (SPA)。\\n\\n路由会根据你的 Markdown 文件的相对路径来自动生成。每个 Markdown 文件都通过 [markdown-it](https://github.com/markdown-it/markdown-it) 编译为 HTML ，然后将其作为 Vue 组件的模板。因此，你可以在 Markdown 文件中直接使用 Vue 语法，便于你嵌入一些动态内容。\\n\\n在开发过程中，我们启动一个常规的开发服务器 (dev-server) ，并将 VuePress 站点作为一个常规的 SPA。如果你以前使用过 Vue 的话，你在使用时会感受到非常熟悉的开发体验。\\n\\n在构建过程中，我们会为  VuePress 站点创建一个服务端渲染 (SSR) 的版本，然后通过虚拟访问每一条路径来渲染对应的 HTML 。这种做法的灵感来源于 [Nuxt](https://nuxtjs.org/) 的 `nuxt generate` 命令，以及其他的一些项目，比如 [Gatsby](https://www.gatsbyjs.org/)。\\n\\n## 为什么不是 ...?\\n\\n### Nuxt\\n\\nNuxt 是一套出色的 Vue SSR 框架， VuePress 能做的事情，Nuxt 实际上也同样能够胜任。但 Nuxt 是为构建应用程序而生的，而 VuePress 则更为轻量化并且专注在以内容为中心的静态网站上。\\n\\n### VitePress\\n\\nVitePress 是 VuePress 的孪生兄弟，它同样由 Vue.js 团队创建和维护。 VitePress 甚至比 VuePress 要更轻更快，但它在灵活性和可配置性上作出了一些让步，比如它不支持插件系统。当然，如果你没有进阶的定制化需求， VitePress 已经足够支持你将你的内容部署到线上。\\n\\n这个比喻可能不是很恰当，但是你可以把 VuePress 和 VitePress 的关系看作 Laravel 和 Lumen 。\\n\\n### Docsify / Docute\\n\\n这两个项目同样都是基于 Vue，然而它们都是完全的运行时驱动，因此对 SEO 不够友好。如果你并不关注 SEO，同时也不想安装大量依赖，它们仍然是非常好的选择！\\n\\n### Hexo\\n\\nHexo 一直驱动着 Vue 2.x 的文档。Hexo 最大的问题在于他的主题系统太过于静态以及过度地依赖纯字符串，而我们十分希望能够好好地利用 Vue 来处理我们的布局和交互。同时，Hexo 在配置 Markdown 渲染方面的灵活性也不是最佳的。\\n\\n### GitBook\\n\\n过去我们的子项目文档一直都在使用 GitBook 。 GitBook 最大的问题在于当文件很多时，每次编辑后的重新加载时间长得令人无法忍受。它的默认主题导航结构也比较有限制性，并且，主题系统也不是 Vue 驱动的。GitBook 背后的团队如今也更专注于将其打造为一个商业产品而不是开源工具。\\n","author":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn"}],"top":false,"length":832,"words":832,"readingTime":2.77}')},81789:(e,r,t)=>{t.r(r),t.d(r,{default:()=>x});var n=t(1863);const s=(0,n._)("h1",{id:"介绍",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),(0,n.Uk)(" 介绍")],-1),a={href:"https://zh.wikipedia.org/wiki/Markdown",target:"_blank",rel:"noopener noreferrer"},o=(0,n._)("p",null,"VuePress 诞生的初衷是为了支持 Vue.js 及其子项目的文档需求，但是现在它已经在帮助大量用户构建他们的文档、博客和其他静态网站。",-1),i=(0,n._)("h2",{id:"它是如何工作的",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#它是如何工作的","aria-hidden":"true"},"#"),(0,n.Uk)(" 它是如何工作的？")],-1),u={href:"https://v3.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://next.router.vuejs.org",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},l=(0,n._)("p",null,"在开发过程中，我们启动一个常规的开发服务器 (dev-server) ，并将 VuePress 站点作为一个常规的 SPA。如果你以前使用过 Vue 的话，你在使用时会感受到非常熟悉的开发体验。",-1),k={href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"},c=(0,n._)("code",null,"nuxt generate",-1),V={href:"https://www.gatsbyjs.org/",target:"_blank",rel:"noopener noreferrer"},p=(0,n.uE)('<h2 id="为什么不是" tabindex="-1"><a class="header-anchor" href="#为什么不是" aria-hidden="true">#</a> 为什么不是 …?</h2><h3 id="nuxt" tabindex="-1"><a class="header-anchor" href="#nuxt" aria-hidden="true">#</a> Nuxt</h3><p>Nuxt 是一套出色的 Vue SSR 框架， VuePress 能做的事情，Nuxt 实际上也同样能够胜任。但 Nuxt 是为构建应用程序而生的，而 VuePress 则更为轻量化并且专注在以内容为中心的静态网站上。</p><h3 id="vitepress" tabindex="-1"><a class="header-anchor" href="#vitepress" aria-hidden="true">#</a> VitePress</h3><p>VitePress 是 VuePress 的孪生兄弟，它同样由 Vue.js 团队创建和维护。 VitePress 甚至比 VuePress 要更轻更快，但它在灵活性和可配置性上作出了一些让步，比如它不支持插件系统。当然，如果你没有进阶的定制化需求， VitePress 已经足够支持你将你的内容部署到线上。</p><p>这个比喻可能不是很恰当，但是你可以把 VuePress 和 VitePress 的关系看作 Laravel 和 Lumen 。</p><h3 id="docsify-docute" tabindex="-1"><a class="header-anchor" href="#docsify-docute" aria-hidden="true">#</a> Docsify / Docute</h3><p>这两个项目同样都是基于 Vue，然而它们都是完全的运行时驱动，因此对 SEO 不够友好。如果你并不关注 SEO，同时也不想安装大量依赖，它们仍然是非常好的选择！</p><h3 id="hexo" tabindex="-1"><a class="header-anchor" href="#hexo" aria-hidden="true">#</a> Hexo</h3><p>Hexo 一直驱动着 Vue 2.x 的文档。Hexo 最大的问题在于他的主题系统太过于静态以及过度地依赖纯字符串，而我们十分希望能够好好地利用 Vue 来处理我们的布局和交互。同时，Hexo 在配置 Markdown 渲染方面的灵活性也不是最佳的。</p><h3 id="gitbook" tabindex="-1"><a class="header-anchor" href="#gitbook" aria-hidden="true">#</a> GitBook</h3><p>过去我们的子项目文档一直都在使用 GitBook 。 GitBook 最大的问题在于当文件很多时，每次编辑后的重新加载时间长得令人无法忍受。它的默认主题导航结构也比较有限制性，并且，主题系统也不是 Vue 驱动的。GitBook 背后的团队如今也更专注于将其打造为一个商业产品而不是开源工具。</p>',12),g={},x=(0,t(94598).Z)(g,[["render",function(e,r){const t=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[s,(0,n._)("p",null,[(0,n.Uk)("VuePress 是一个以 Markdown 为中心的静态网站生成器。你可以使用 "),(0,n._)("a",a,[(0,n.Uk)("Markdown"),(0,n.Wm)(t)]),(0,n.Uk)(" 来书写内容（如文档、博客等），然后 VuePress 会帮助你生成一个静态网站来展示它们。")]),o,i,(0,n._)("p",null,[(0,n.Uk)("一个 VuePress 站点本质上是一个由 "),(0,n._)("a",u,[(0,n.Uk)("Vue"),(0,n.Wm)(t)]),(0,n.Uk)(" 和 "),(0,n._)("a",h,[(0,n.Uk)("Vue Router"),(0,n.Wm)(t)]),(0,n.Uk)(" 驱动的单页面应用 (SPA)。")]),(0,n._)("p",null,[(0,n.Uk)("路由会根据你的 Markdown 文件的相对路径来自动生成。每个 Markdown 文件都通过 "),(0,n._)("a",d,[(0,n.Uk)("markdown-it"),(0,n.Wm)(t)]),(0,n.Uk)(" 编译为 HTML ，然后将其作为 Vue 组件的模板。因此，你可以在 Markdown 文件中直接使用 Vue 语法，便于你嵌入一些动态内容。")]),l,(0,n._)("p",null,[(0,n.Uk)("在构建过程中，我们会为 VuePress 站点创建一个服务端渲染 (SSR) 的版本，然后通过虚拟访问每一条路径来渲染对应的 HTML 。这种做法的灵感来源于 "),(0,n._)("a",k,[(0,n.Uk)("Nuxt"),(0,n.Wm)(t)]),(0,n.Uk)(" 的 "),c,(0,n.Uk)(" 命令，以及其他的一些项目，比如 "),(0,n._)("a",V,[(0,n.Uk)("Gatsby"),(0,n.Wm)(t)]),(0,n.Uk)("。")]),p])}]])}}]);