"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9496],{35476:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e=JSON.parse('{"key":"v-17855447","path":"/zh/vuepress-next/reference/plugin/theme-data.html","title":"theme-data","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"配置项","slug":"配置项","link":"#配置项","children":[{"level":3,"title":"themeData","slug":"themedata","link":"#themedata","children":[]}]},{"level":2,"title":"Composition API","slug":"composition-api","link":"#composition-api","children":[{"level":3,"title":"useThemeData","slug":"usethemedata","link":"#usethemedata","children":[]},{"level":3,"title":"useThemeLocaleData","slug":"usethemelocaledata","link":"#usethemelocaledata","children":[]}]}],"git":{"createdTime":1635758933000,"updatedTime":1635758933000,"contributors":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn","commits":1}]},"copyright":"","filePathRelative":"zh/vuepress-next/reference/plugin/theme-data.md","content":"# theme-data\\n\\n<NpmBadge package=\\"@vuepress/plugin-theme-data\\" />\\n\\n为你的主题提供客户端数据，包含 VuePress 的 [多语言支持](../../guide/i18n.md) 。\\n\\n该插件主要用于开发主题，并且已经集成到默认主题中。大部分情况下你不需要直接使用它。\\n\\n对于主题作者，该插件可以提供与 VuePress 及默认主题相同的多语言支持机制。但是如果你的主题不需要提供多语言支持，或者你想用你自己的方式来实现多语言支持，那么你不需要使用该插件。\\n\\n## 安装\\n\\n```bash\\nnpm i -D @vuepress/plugin-theme-data@next\\n```\\n\\n## 配置项\\n\\n### themeData\\n\\n- 类型： `ThemeData`\\n\\n- 默认值： `{}`\\n\\n- 详情：\\n\\n  你希望在 Client 端中使用的主题数据对象。\\n\\n  你可以通过该配置项，在 Node 端提供主题数据，然后在客户端通过 [useThemeData](#useThemeData) 和 [useThemeLocaleData](#useThemeLocaleData) 来使用主题数据。\\n\\n- 示例：\\n\\n```js\\nmodule.exports = {\\n  plugins: [\\n    [\\n      \'@vuepress/plugin-theme-data\',\\n      {\\n        themeData: {\\n          foo: \'foo\',\\n          locales: {\\n            \'/zh/\': {\\n              foo: \'zh-foo\',\\n            },\\n          },\\n        },\\n      },\\n    ],\\n  ],\\n}\\n```\\n\\n::: warning\\n主题数据对象在传递到客户端之前，会使用 `JSON.stringify()` 进行处理，因此你需要保证你提供的是一个可以被 JSON 序列化的对象。\\n:::\\n\\n## Composition API\\n\\n### useThemeData\\n\\n- 详情：\\n\\n  返回主题数据的 Ref 对象。\\n  \\n  数据是通过 [themeData](#themeData) 配置项提供的。\\n\\n- 示例：\\n\\n```ts\\nimport { useThemeData } from \'@vuepress/plugin-theme-data/lib/client\'\\nimport type { ThemeData } from \'@vuepress/plugin-theme-data\'\\n\\ntype MyThemeData = ThemeData<{\\n  foo: string\\n}>\\n\\nexport default {\\n  setup() {\\n    const themeData = useThemeData<MyThemeData>()\\n    console.log(themeData.value)\\n  },\\n}\\n```\\n\\n### useThemeLocaleData\\n\\n- 详情：\\n\\n  返回当前 locale 下主题数据的 Ref 对象。\\n\\n  当前 locale 中的字段已被合并到顶层字段中。\\n\\n- 示例：\\n\\n```ts\\nimport { useThemeLocaleData } from \'@vuepress/plugin-theme-data/lib/client\'\\nimport type { ThemeData } from \'@vuepress/plugin-theme-data/lib/client\'\\n\\ntype MyThemeData = ThemeData<{\\n  foo: string\\n}>\\n\\nexport default {\\n  setup() {\\n    const themeLocaleData = useThemeLocaleData<MyThemeData>()\\n    console.log(themeLocaleData.value)\\n  },\\n}\\n```\\n","author":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn"}],"top":false,"length":434,"words":434,"readingTime":1.45}')},83544:(s,n,a)=>{a.r(n),a.d(n,{default:()=>E});var e=a(1863);const l=(0,e._)("h1",{id:"theme-data",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#theme-data","aria-hidden":"true"},"#"),(0,e.Uk)(" theme-data")],-1),p=(0,e._)("p",null,"该插件主要用于开发主题，并且已经集成到默认主题中。大部分情况下你不需要直接使用它。",-1),o=(0,e._)("p",null,"对于主题作者，该插件可以提供与 VuePress 及默认主题相同的多语言支持机制。但是如果你的主题不需要提供多语言支持，或者你想用你自己的方式来实现多语言支持，那么你不需要使用该插件。",-1),t=(0,e._)("h2",{id:"安装",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),(0,e.Uk)(" 安装")],-1),i={class:"code-enhance"},c=(0,e.uE)('<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/plugin-theme-data@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),D=(0,e.uE)('<h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="themedata" tabindex="-1"><a class="header-anchor" href="#themedata" aria-hidden="true">#</a> themeData</h3><ul><li><p>类型： <code>ThemeData</code></p></li><li><p>默认值： <code>{}</code></p></li><li><p>详情：</p><p>你希望在 Client 端中使用的主题数据对象。</p><p>你可以通过该配置项，在 Node 端提供主题数据，然后在客户端通过 <a href="#useThemeData">useThemeData</a> 和 <a href="#useThemeLocaleData">useThemeLocaleData</a> 来使用主题数据。</p></li><li><p>示例：</p></li></ul>',3),r={class:"code-enhance"},d=(0,e.uE)('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>\n<span class="line"><span style="color:#D4D4D4;">    [</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">themeData:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">foo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">locales:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#CE9178;">&#39;/zh/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">              </span><span style="color:#9CDCFE;">foo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;zh-foo&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">            },</span></span>\n<span class="line"><span style="color:#D4D4D4;">          },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        },</span></span>\n<span class="line"><span style="color:#D4D4D4;">      },</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),u=(0,e.uE)('<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>主题数据对象在传递到客户端之前，会使用 <code>JSON.stringify()</code> 进行处理，因此你需要保证你提供的是一个可以被 JSON 序列化的对象。</p></div><h2 id="composition-api" tabindex="-1"><a class="header-anchor" href="#composition-api" aria-hidden="true">#</a> Composition API</h2><h3 id="usethemedata" tabindex="-1"><a class="header-anchor" href="#usethemedata" aria-hidden="true">#</a> useThemeData</h3><ul><li><p>详情：</p><p>返回主题数据的 Ref 对象。</p><p>数据是通过 <a href="#themeData">themeData</a> 配置项提供的。</p></li><li><p>示例：</p></li></ul>',4),m={class:"code-enhance"},h=(0,e.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">useThemeData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ThemeData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">ThemeData</span><span style="color:#D4D4D4;">&lt;{</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">themeData</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useThemeData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;">&gt;()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">themeData</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),y=(0,e._)("h3",{id:"usethemelocaledata",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#usethemelocaledata","aria-hidden":"true"},"#"),(0,e.Uk)(" useThemeLocaleData")],-1),v=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,"详情："),(0,e._)("p",null,"返回当前 locale 下主题数据的 Ref 对象。"),(0,e._)("p",null,"当前 locale 中的字段已被合并到顶层字段中。")]),(0,e._)("li",null,[(0,e._)("p",null,"示例：")])],-1),C={class:"code-enhance"},b=(0,e.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">useThemeLocaleData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ThemeData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">ThemeData</span><span style="color:#D4D4D4;">&lt;{</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">themeLocaleData</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useThemeLocaleData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;">&gt;()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">themeLocaleData</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),g={},E=(0,a(94598).Z)(g,[["render",function(s,n){const a=(0,e.up)("NpmBadge"),g=(0,e.up)("RouterLink"),E=(0,e.up)("CodeCopyButton");return(0,e.wg)(),(0,e.iD)("div",null,[l,(0,e.Wm)(a,{package:"@vuepress/plugin-theme-data"}),(0,e._)("p",null,[(0,e.Uk)("为你的主题提供客户端数据，包含 VuePress 的 "),(0,e.Wm)(g,{to:"/zh/vuepress-next/guide/i18n.html"},{default:(0,e.w5)((()=>[(0,e.Uk)("多语言支持")])),_:1}),(0,e.Uk)(" 。")]),p,o,t,(0,e._)("div",i,[c,(0,e.Wm)(E)]),D,(0,e._)("div",r,[d,(0,e.Wm)(E)]),u,(0,e._)("div",m,[h,(0,e.Wm)(E)]),y,v,(0,e._)("div",C,[b,(0,e.Wm)(E)])])}]])}}]);