"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4595],{57416:(n,s,a)=>{a.r(s),a.d(s,{data:()=>l});const l=JSON.parse('{"key":"v-cea073a4","path":"/vuepress-next/advanced/cookbook/markdown-and-vue-sfc.html","title":"Markdown and Vue SFC","lang":"en-US","frontmatter":{},"excerpt":"","headers":[],"git":{"createdTime":1635758933000,"updatedTime":1635758933000,"contributors":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn","commits":1}]},"copyright":"","filePathRelative":"vuepress-next/advanced/cookbook/markdown-and-vue-sfc.md","content":"# Markdown and Vue SFC\\n\\nEach Markdown file is first compiled into HTML, and then converted to a Vue SFC. In other words, you can take Markdown as Vue SFC:\\n\\n- Blocks `<script>` and `<style>` are treated as Vue SFC blocks as they are. In other words, they are hoisted from the `<template>` block to the top-level of SFC.\\n- Everything outside `<script>` and `<style>` will be compiled into HTML, and be treated as Vue SFC `<template>` block.\\n\\n::: warning\\nAs Vue SFC can contain only one `<script>` element, you should avoid using more than one `<script>` in VuePress markdown.\\n:::\\n\\nHere comes an example:\\n\\n**Input**\\n\\n```vue\\n_Hello, {{ msg }}_\\n\\n<RedDiv>\\n\\n_Current count is: {{ count }}_\\n\\n</RedDiv>\\n\\n<button @click=\\"count++\\">Click Me!</button>\\n\\n<script>\\nimport { h, ref } from \'vue\'\\n\\nconst RedDiv = (_, ctx) => h(\\n  \'div\',\\n  {\\n    class: \'red-div\',\\n  },\\n  ctx.slots.default()\\n)\\n\\nexport default {\\n  components: {\\n    RedDiv,\\n  },\\n\\n  setup() {\\n    const msg = \'Vue in Markdown\'\\n    const count = ref(0)\\n\\n    return {\\n      msg,\\n      count,\\n    }\\n  }\\n}\\n<\/script>\\n\\n<style>\\n.red-div {\\n  color: red;\\n}\\n</style>\\n```\\n\\n**Output**\\n\\n_Hello, {{ msg }}_\\n\\n<RedDiv>\\n\\n_Current count is: {{ count }}_\\n\\n</RedDiv>\\n\\n<button @click=\\"count++\\">Click Me!</button>\\n\\n<script>\\nimport { h, ref } from \'vue\'\\n\\nconst RedDiv = (_, ctx) => h(\\n  \'div\',\\n  {\\n    class: \'red-div\',\\n  },\\n  ctx.slots.default()\\n)\\n\\nexport default {\\n  components: {\\n    RedDiv,\\n  },\\n\\n  setup() {\\n    const msg = \'Vue in Markdown\'\\n    const count = ref(0)\\n\\n    return {\\n      msg,\\n      count,\\n    }\\n  }\\n}\\n<\/script>\\n\\n<style>\\n.red-div {\\n  color: red;\\n}\\n</style>\\n","author":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn"}],"top":false,"length":224,"words":224,"readingTime":0.75}')},28505:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var l=a(1863),e=a(52901);const o=(0,l.uE)('<h1 id="markdown-and-vue-sfc" tabindex="-1"><a class="header-anchor" href="#markdown-and-vue-sfc" aria-hidden="true">#</a> Markdown and Vue SFC</h1><p>Each Markdown file is first compiled into HTML, and then converted to a Vue SFC. In other words, you can take Markdown as Vue SFC:</p><ul><li>Blocks <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> are treated as Vue SFC blocks as they are. In other words, they are hoisted from the <code>&lt;template&gt;</code> block to the top-level of SFC.</li><li>Everything outside <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> will be compiled into HTML, and be treated as Vue SFC <code>&lt;template&gt;</code> block.</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>As Vue SFC can contain only one <code>&lt;script&gt;</code> element, you should avoid using more than one <code>&lt;script&gt;</code> in VuePress markdown.</p></div><p>Here comes an example:</p><p><strong>Input</strong></p>',6),p={class:"code-enhance"},t=(0,l.uE)('<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">_Hello, {{ msg }}_</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;RedDiv&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">_Current count is: {{ count }}_</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;/RedDiv&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;button @click=&quot;count++&quot;&gt;Click Me!&lt;/button&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">h</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ref</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vue&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">RedDiv</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">h</span><span style="color:#D4D4D4;">(</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;div&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">class:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;red-div&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">slots</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">default</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">components:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">RedDiv</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">msg</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;Vue in Markdown&#39;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">count</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">ref</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">msg</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">    }</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">style</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D7BA7D;">.red-div</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">red</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">style</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),c=(0,l._)("p",null,[(0,l._)("strong",null,"Output")],-1);var i=a(53827);const r={components:{RedDiv:(n,s)=>(0,l.h)("div",{class:"red-div"},s.slots.default())},setup:()=>({msg:"Vue in Markdown",count:(0,i.iH)(0)})},d=(0,a(94598).Z)(r,[["render",function(n,s,a,i,r,d){const D=(0,l.up)("CodeCopyButton"),u=(0,l.up)("RedDiv");return(0,l.wg)(),(0,l.iD)("div",null,[o,(0,l._)("div",p,[t,(0,l.Wm)(D)]),c,(0,l._)("p",null,[(0,l._)("em",null,"Hello, "+(0,e.zw)(i.msg),1)]),(0,l.Wm)(u,null,{default:(0,l.w5)((()=>[(0,l._)("p",null,[(0,l._)("em",null,"Current count is: "+(0,e.zw)(i.count),1)])])),_:1}),(0,l._)("p",null,[(0,l._)("button",{onClick:s[0]||(s[0]=n=>i.count++)},"Click Me!")])])}]])}}]);