"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[155],{48122:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a=JSON.parse('{"key":"v-78971cb2","path":"/zh/vuepress-next/reference/node-api.html","title":"Node API","lang":"zh-CN","frontmatter":{},"excerpt":"<h1 id=\\"node-api\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#node-api\\" aria-hidden=\\"true\\">#</a> Node API</h1>\\n<NpmBadge package=\\"@vuepress/core\\" /><p>Node API 是由 <a href=\\"https://www.npmjs.com/package/@vuepress/clcorei\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">@vuepress/core<ExternalLinkIcon/></a> 包提供的。它是 <a href=\\"https://www.npmjs.com/package/vuepress\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vuepress<ExternalLinkIcon/></a> 包的依赖之一，当然你也可以单独安装它：</p>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #D4D4D4\\">npm i -D @vuepress/core@next</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><h2 id=\\"app\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#app\\" aria-hidden=\\"true\\">#</a> App</h2>\\n<p><RouterLink to=\\"/zh/vuepress-next/reference/plugin-api.html\\">插件 API</RouterLink> 的所有 Hooks 中都可以获取到 App 实例。</p>\\n<p><code v-pre>BuildApp</code> 和 <code v-pre>DevApp</code> 除了 <a href=\\"#build\\">build</a> 和 <a href=\\"#dev\\">dev</a> 方法外，拥有一样的属性和方法。</p>\\n<h3 id=\\"createbuildapp\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#createbuildapp\\" aria-hidden=\\"true\\">#</a> createBuildApp</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">createBuildApp</span><span style=\\"color: #D4D4D4\\">: (</span><span style=\\"color: #9CDCFE\\">config</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #4EC9B0\\">AppConfig</span><span style=\\"color: #D4D4D4\\">) </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">BuildApp</span><span style=\\"color: #D4D4D4\\">;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参数：</li>\\n</ul>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>config</td>\\n<td><code v-pre>AppConfig</code></td>\\n<td>创建 VuePress App 的选项。</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>\\n<p>详情：</p>\\n<p>创建一个 Build 模式的 App 实例，用于构建静态文件。</p>\\n</li>\\n<li>\\n<p>示例：</p>\\n</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">build</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #569CD6\\">async</span><span style=\\"color: #D4D4D4\\"> () </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4FC1FF\\">app</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #DCDCAA\\">createBuildApp</span><span style=\\"color: #D4D4D4\\">({</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    </span><span style=\\"color: #6A9955\\">// ...配置项</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  })</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 初始化和准备</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">init</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">prepare</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 构建</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">build</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 处理 onGenerated hook</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">pluginApi</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">hooks</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">onGenerated</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">process</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参考：\\n<ul>\\n<li><a href=\\"#build\\">Node API &gt; App 方法 &gt; build</a></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"createdevapp\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#createdevapp\\" aria-hidden=\\"true\\">#</a> createDevApp</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">createDevApp</span><span style=\\"color: #D4D4D4\\">: (</span><span style=\\"color: #9CDCFE\\">config</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #4EC9B0\\">AppConfig</span><span style=\\"color: #D4D4D4\\">) </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">DevApp</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参数：</li>\\n</ul>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>config</td>\\n<td><code v-pre>AppConfig</code></td>\\n<td>创建 VuePress App 的选项。</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>\\n<p>详情：</p>\\n<p>创建一个 Dev 模式的 App 实例，用于启动开发服务器。</p>\\n</li>\\n<li>\\n<p>示例：</p>\\n</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">dev</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #569CD6\\">async</span><span style=\\"color: #D4D4D4\\"> () </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4FC1FF\\">app</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #DCDCAA\\">createDevApp</span><span style=\\"color: #D4D4D4\\">({</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    </span><span style=\\"color: #6A9955\\">// ...配置项</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  })</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 初始化和准备</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">init</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">prepare</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 启动开发服务器</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4FC1FF\\">closeDevServer</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">dev</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 准备文件监听器</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4FC1FF\\">watchers</span><span style=\\"color: #D4D4D4\\"> = []</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 重启开发服务器</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">restart</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #569CD6\\">async</span><span style=\\"color: #D4D4D4\\"> () </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">all</span><span style=\\"color: #D4D4D4\\">([</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">      </span><span style=\\"color: #6A9955\\">// 关闭所有监听器</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">      ...</span><span style=\\"color: #9CDCFE\\">watchers</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">map</span><span style=\\"color: #D4D4D4\\">((</span><span style=\\"color: #9CDCFE\\">item</span><span style=\\"color: #D4D4D4\\">) </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">item</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">close</span><span style=\\"color: #D4D4D4\\">()),</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">      </span><span style=\\"color: #6A9955\\">// 关闭当前的开发服务器</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">      </span><span style=\\"color: #DCDCAA\\">closeDevServer</span><span style=\\"color: #D4D4D4\\">(),</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    ])</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">dev</span><span style=\\"color: #D4D4D4\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 处理 onWatched hook</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">pluginApi</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">hooks</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">onWatched</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">process</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">, </span><span style=\\"color: #9CDCFE\\">watchers</span><span style=\\"color: #D4D4D4\\">, </span><span style=\\"color: #9CDCFE\\">restart</span><span style=\\"color: #D4D4D4\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参考：\\n<ul>\\n<li><a href=\\"#dev\\">Node API &gt; App 方法 &gt; dev</a></li>\\n</ul>\\n</li>\\n</ul>\\n<h2 id=\\"app-属性\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#app-属性\\" aria-hidden=\\"true\\">#</a> App 属性</h2>\\n<h3 id=\\"version\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#version\\" aria-hidden=\\"true\\">#</a> version</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>string</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>VuePress App 的版本，即 <code v-pre>@vuepress/core</code> 包的版本。</p>\\n</li>\\n</ul>\\n<h3 id=\\"options\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#options\\" aria-hidden=\\"true\\">#</a> options</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>AppOptions</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>VuePress App 的配置项。</p>\\n<p>这些配置项来自于 <a href=\\"#createbuildapp\\">createBuildApp</a> / <a href=\\"#createdevapp\\">createDevApp</a> 的 <code v-pre>config</code> 参数，但所有可选的字段都填充上了默认值。</p>\\n</li>\\n</ul>\\n<h3 id=\\"env-isbuild\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#env-isbuild\\" aria-hidden=\\"true\\">#</a> env.isBuild</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>boolean</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>用于判断 App 是否运行在 Build 模式的环境标记，即当前 App 是否是 <a href=\\"#createbuildapp\\">BuildApp</a> 实例。</p>\\n</li>\\n</ul>\\n<h3 id=\\"env-isdev\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#env-isdev\\" aria-hidden=\\"true\\">#</a> env.isDev</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>boolean</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>用于判断 App 是否运行在 Dev 模式的环境标记，即当前 App 是否是 <a href=\\"#createdevapp\\">DevApp</a> 实例。</p>\\n</li>\\n</ul>\\n<h3 id=\\"env-isdebug\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#env-isdebug\\" aria-hidden=\\"true\\">#</a> env.isDebug</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>boolean</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>用于判断 App 是否开启 Debug 模式的环境标记。</p>\\n</li>\\n</ul>\\n<h3 id=\\"sitedata\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#sitedata\\" aria-hidden=\\"true\\">#</a> siteData</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>SiteData</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>由用户设置的站点数据，包含所有的 <RouterLink to=\\"/zh/vuepress-next/reference/config.html#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE\\">站点配置</RouterLink> ，可以在客户端代码中使用。</p>\\n</li>\\n</ul>\\n<h3 id=\\"markdown\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#markdown\\" aria-hidden=\\"true\\">#</a> markdown</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>MarkdownIt</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>用于解析 Markdown 内容的 <a href=\\"https://github.com/markdown-it/markdown-it\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">markdown-it<ExternalLinkIcon/></a> 实例。</p>\\n<p>它仅在 <RouterLink to=\\"/zh/vuepress-next/reference/plugin-api.html#oninitialized\\">onInitialized</RouterLink> 以及之后的 Hooks 中才可用。</p>\\n</li>\\n</ul>\\n<h3 id=\\"layouts\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#layouts\\" aria-hidden=\\"true\\">#</a> layouts</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>Record&lt;string, string&gt;</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>布局组件 Map ，其键为布局名称，对应值为布局组件的绝对文件路径。</p>\\n<p>它仅在 <RouterLink to=\\"/zh/vuepress-next/reference/plugin-api.html#oninitialized\\">onInitialized</RouterLink> 以及之后的 Hooks 中才可用。</p>\\n</li>\\n</ul>\\n<h3 id=\\"pages\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#pages\\" aria-hidden=\\"true\\">#</a> pages</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>Page[]</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p><a href=\\"#page\\">Page</a> 对象数组。</p>\\n<p>它仅在 <RouterLink to=\\"/zh/vuepress-next/reference/plugin-api.html#oninitialized\\">onInitialized</RouterLink> 以及之后的 Hooks 中才可用。</p>\\n</li>\\n</ul>\\n<h2 id=\\"app-方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#app-方法\\" aria-hidden=\\"true\\">#</a> App 方法</h2>\\n<h3 id=\\"dir\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#dir\\" aria-hidden=\\"true\\">#</a> dir</h3>\\n<ul>\\n<li>\\n<p>工具函数：</p>\\n<ul>\\n<li><code v-pre>dir.cache()</code>： 解析至缓存目录</li>\\n<li><code v-pre>dir.temp()</code>： 解析至临时文件目录</li>\\n<li><code v-pre>dir.source()</code>： 解析至源文件目录</li>\\n<li><code v-pre>dir.dest()</code>： 解析至输出目录</li>\\n<li><code v-pre>dir.client()</code>： 解析至 <code v-pre>@vuepress/client</code> 目录</li>\\n<li><code v-pre>dir.public()</code>： 解析至 Public 文件目录</li>\\n</ul>\\n</li>\\n<li>\\n<p>函数签名：</p>\\n</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">type</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">AppDirFunction</span><span style=\\"color: #D4D4D4\\"> = (...</span><span style=\\"color: #9CDCFE\\">args</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #4EC9B0\\">string</span><span style=\\"color: #D4D4D4\\">[]) </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">string</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>\\n<p>详情：</p>\\n<p>用于解析对应目录下的文件绝对路径的一些工具函数。</p>\\n<p>如果你不传入任何参数，就会返回对应目录的绝对路径。</p>\\n</li>\\n<li>\\n<p>示例：</p>\\n</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #6A9955\\">// 解析 `${sourceDir}/README.md` 文件的绝对路径</span></span>\\n<span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4FC1FF\\">homeSourceFile</span><span style=\\"color: #D4D4D4\\"> = </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">dir</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">source</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #CE9178\\">&#39;README.md&#39;</span><span style=\\"color: #D4D4D4\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><h3 id=\\"writetemp\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#writetemp\\" aria-hidden=\\"true\\">#</a> writeTemp</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #DCDCAA\\">writeTemp</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #9CDCFE\\">file</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #9CDCFE\\">string</span><span style=\\"color: #D4D4D4\\">, </span><span style=\\"color: #9CDCFE\\">content</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #9CDCFE\\">string</span><span style=\\"color: #D4D4D4\\">): </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;</span><span style=\\"color: #9CDCFE\\">string</span><span style=\\"color: #D4D4D4\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参数：</li>\\n</ul>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>file</td>\\n<td><code v-pre>string</code></td>\\n<td>要写入的临时文件的路径，相对于临时文件目录。</td>\\n</tr>\\n<tr>\\n<td>content</td>\\n<td><code v-pre>string</code></td>\\n<td>要写入的临时文件路径的内容。</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>\\n<p>详情：</p>\\n<p>用于写入临时文件的方法。</p>\\n<p>写入的文件可以在客户端文件中通过 <code v-pre>@temp</code> 别名来引入。</p>\\n</li>\\n<li>\\n<p>示例：</p>\\n</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #4EC9B0\\">module</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #4EC9B0\\">exports</span><span style=\\"color: #D4D4D4\\"> = {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 在 onPrepared hook 中写入临时文件</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">async</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">onPrepared</span><span style=\\"color: #D4D4D4\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">writeTemp</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #CE9178\\">&#39;foo.js&#39;</span><span style=\\"color: #D4D4D4\\">, </span><span style=\\"color: #CE9178\\">&#39;export const foo = </span><span style=\\"color: #D7BA7D\\">\\\\&#39;</span><span style=\\"color: #CE9178\\">bar</span><span style=\\"color: #D7BA7D\\">\\\\&#39;</span><span style=\\"color: #CE9178\\">&#39;</span><span style=\\"color: #D4D4D4\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #6A9955\\">// 在客户端文件中引入临时文件</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C586C0\\">import</span><span style=\\"color: #D4D4D4\\"> { </span><span style=\\"color: #9CDCFE\\">foo</span><span style=\\"color: #D4D4D4\\"> } </span><span style=\\"color: #C586C0\\">from</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #CE9178\\">&#39;@temp/foo&#39;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><h3 id=\\"init\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#init\\" aria-hidden=\\"true\\">#</a> init</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #DCDCAA\\">init</span><span style=\\"color: #D4D4D4\\">(): </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;</span><span style=\\"color: #569CD6\\">void</span><span style=\\"color: #D4D4D4\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>\\n<p>详情：</p>\\n<p>初始化 VuePress App 。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks\\">深入 &gt; 架构 &gt; 核心流程与 Hooks</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"prepare\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#prepare\\" aria-hidden=\\"true\\">#</a> prepare</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #DCDCAA\\">prepare</span><span style=\\"color: #D4D4D4\\">(): </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;</span><span style=\\"color: #569CD6\\">void</span><span style=\\"color: #D4D4D4\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>\\n<p>详情：</p>\\n<p>准备客户端临时文件。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks\\">深入 &gt; 架构 &gt; 核心流程与 Hooks</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"build\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#build\\" aria-hidden=\\"true\\">#</a> build</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #DCDCAA\\">build</span><span style=\\"color: #D4D4D4\\">(): </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;</span><span style=\\"color: #569CD6\\">void</span><span style=\\"color: #D4D4D4\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>\\n<p>详情：</p>\\n<p>生成静态站点文件。</p>\\n<p>该方法仅在 <a href=\\"#createbuildapp\\">BuildApp</a> 中可用。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks\\">深入 &gt; 架构 &gt; 核心流程与 Hooks</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"dev\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#dev\\" aria-hidden=\\"true\\">#</a> dev</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #DCDCAA\\">dev</span><span style=\\"color: #D4D4D4\\">(): </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;() </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;</span><span style=\\"color: #569CD6\\">void</span><span style=\\"color: #D4D4D4\\">&gt;&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>\\n<p>详情：</p>\\n<p>启动开发服务器。</p>\\n<p>该方法仅在 <a href=\\"#createdevapp\\">DevApp</a> 中可用。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks\\">深入 &gt; 架构 &gt; 核心流程与 Hooks</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h2 id=\\"page\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#page\\" aria-hidden=\\"true\\">#</a> Page</h2>\\n<h3 id=\\"createpage\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#createpage\\" aria-hidden=\\"true\\">#</a> createPage</h3>\\n<ul>\\n<li>函数签名：</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">createPage</span><span style=\\"color: #D4D4D4\\">: (</span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #4EC9B0\\">App</span><span style=\\"color: #D4D4D4\\">, </span><span style=\\"color: #9CDCFE\\">options</span><span style=\\"color: #D4D4D4\\">: </span><span style=\\"color: #4EC9B0\\">PageOptions</span><span style=\\"color: #D4D4D4\\">) </span><span style=\\"color: #569CD6\\">=&gt;</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #4EC9B0\\">Promise</span><span style=\\"color: #D4D4D4\\">&lt;</span><span style=\\"color: #4EC9B0\\">Page</span><span style=\\"color: #D4D4D4\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参数：</li>\\n</ul>\\n<table>\\n<thead>\\n<tr>\\n<th>参数</th>\\n<th>类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>app</td>\\n<td><code v-pre>App</code></td>\\n<td>VuePress App 实例。</td>\\n</tr>\\n<tr>\\n<td>options</td>\\n<td><code v-pre>PageOptions</code></td>\\n<td>创建 VuePress Page 的选项。</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>\\n<p>详情：</p>\\n<p>创建一个 VuePress Page 对象。</p>\\n</li>\\n<li>\\n<p>示例：</p>\\n</li>\\n</ul>\\n<div class=\\"code-enhance\\">\\n              \\n              \\n              \\n              \\n              \\n              \\n              \\n              <div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre v-pre class=\\"shiki\\" style=\\"background-color: #1E1E1E\\"><code><span class=\\"line\\"><span style=\\"color: #569CD6\\">const</span><span style=\\"color: #D4D4D4\\"> { </span><span style=\\"color: #4FC1FF\\">createPage</span><span style=\\"color: #D4D4D4\\"> } = </span><span style=\\"color: #DCDCAA\\">require</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #CE9178\\">&#39;@vuepress/core&#39;</span><span style=\\"color: #D4D4D4\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #4EC9B0\\">module</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #4EC9B0\\">exports</span><span style=\\"color: #D4D4D4\\"> = {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #6A9955\\">// 在 onInitialized hook 中创建一个额外页面</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  </span><span style=\\"color: #569CD6\\">async</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">onInitialized</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    </span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #9CDCFE\\">pages</span><span style=\\"color: #D4D4D4\\">.</span><span style=\\"color: #DCDCAA\\">push</span><span style=\\"color: #D4D4D4\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">      </span><span style=\\"color: #C586C0\\">await</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #DCDCAA\\">createPage</span><span style=\\"color: #D4D4D4\\">(</span><span style=\\"color: #9CDCFE\\">app</span><span style=\\"color: #D4D4D4\\">, {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">        </span><span style=\\"color: #9CDCFE\\">path:</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #CE9178\\">&#39;/foo.html&#39;</span><span style=\\"color: #D4D4D4\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">        </span><span style=\\"color: #9CDCFE\\">frontmatter:</span><span style=\\"color: #D4D4D4\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">          </span><span style=\\"color: #9CDCFE\\">layout:</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #CE9178\\">&#39;Layout&#39;</span><span style=\\"color: #D4D4D4\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">        },</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">        </span><span style=\\"color: #9CDCFE\\">content:</span><span style=\\"color: #D4D4D4\\"> </span><span style=\\"color: #CE9178\\">`</span><span style=\\"color: #D7BA7D\\">\\\\</span></span>\\n<span class=\\"line\\"><span style=\\"color: #CE9178\\"># 某个 Page</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #CE9178\\">你好，世界。</span></span>\\n<span class=\\"line\\"><span style=\\"color: #CE9178\\">`</span><span style=\\"color: #D4D4D4\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">      })</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">    )</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #D4D4D4\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>\\n              <CodeCopyButton />\\n            </div><ul>\\n<li>参考：\\n<ul>\\n<li><a href=\\"#pages\\">Node API &gt; App 属性 &gt; pages</a></li>\\n<li><RouterLink to=\\"/zh/vuepress-next/advanced/cookbook/adding-extra-pages.html\\">Cookbook &gt; 添加额外页面</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h2 id=\\"page-属性\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#page-属性\\" aria-hidden=\\"true\\">#</a> Page 属性</h2>\\n<h3 id=\\"key\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#key\\" aria-hidden=\\"true\\">#</a> key</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>string</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>该 Page 的标识。</p>\\n<p>Page Key 会被用作页面路由的 <a href=\\"https://next.router.vuejs.org/api/#name-2\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">name<ExternalLinkIcon/></a>。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/reference/components.html#content\\">Built-in Components &gt; Content</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"path\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#path\\" aria-hidden=\\"true\\">#</a> path</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>string</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>该 Page 的路由路径。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/guide/page.html#%E8%B7%AF%E7%94%B1\\">指南 &gt; 页面 &gt; 路由</RouterLink></li>\\n<li><a href=\\"#pathinferred\\">Node API &gt; Page 属性 &gt; pathInferred</a></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"title\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#title\\" aria-hidden=\\"true\\">#</a> title</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>string</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>该 Page 的标题。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/reference/frontmatter.html#title\\">Frontmatter &gt; title</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"lang\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#lang\\" aria-hidden=\\"true\\">#</a> lang</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>string</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>该 Page 的语言。</p>\\n</li>\\n<li>\\n<p>示例：</p>\\n<ul>\\n<li><code v-pre>\'en-US\'</code></li>\\n<li><code v-pre>\'zh-CN\'</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/reference/frontmatter.html#title\\">Frontmatter &gt; lang</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"frontmatter\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#frontmatter\\" aria-hidden=\\"true\\">#</a> frontmatter</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>PageFrontmatter</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>该 Page 的 Frontmatter 。</p>\\n</li>\\n<li>\\n<p>参考：</p>\\n<ul>\\n<li><RouterLink to=\\"/zh/vuepress-next/reference/frontmatter.html\\">Frontmatter</RouterLink></li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\"excerpt\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#excerpt\\" aria-hidden=\\"true\\">#</a> excerpt</h3>\\n<ul>\\n<li>\\n<p>类型： <code v-pre>string</code></p>\\n</li>\\n<li>\\n<p>详情：</p>\\n<p>该 Page 的摘要。</p>\\n<p>如果一个 Markdown 文件中包含一个 `</p>\\n</li>\\n</ul>\\n","headers":[{"level":2,"title":"App","slug":"app","link":"#app","children":[{"level":3,"title":"createBuildApp","slug":"createbuildapp","link":"#createbuildapp","children":[]},{"level":3,"title":"createDevApp","slug":"createdevapp","link":"#createdevapp","children":[]}]},{"level":2,"title":"App 属性","slug":"app-属性","link":"#app-属性","children":[{"level":3,"title":"version","slug":"version","link":"#version","children":[]},{"level":3,"title":"options","slug":"options","link":"#options","children":[]},{"level":3,"title":"env.isBuild","slug":"env-isbuild","link":"#env-isbuild","children":[]},{"level":3,"title":"env.isDev","slug":"env-isdev","link":"#env-isdev","children":[]},{"level":3,"title":"env.isDebug","slug":"env-isdebug","link":"#env-isdebug","children":[]},{"level":3,"title":"siteData","slug":"sitedata","link":"#sitedata","children":[]},{"level":3,"title":"markdown","slug":"markdown","link":"#markdown","children":[]},{"level":3,"title":"layouts","slug":"layouts","link":"#layouts","children":[]},{"level":3,"title":"pages","slug":"pages","link":"#pages","children":[]}]},{"level":2,"title":"App 方法","slug":"app-方法","link":"#app-方法","children":[{"level":3,"title":"dir","slug":"dir","link":"#dir","children":[]},{"level":3,"title":"writeTemp","slug":"writetemp","link":"#writetemp","children":[]},{"level":3,"title":"init","slug":"init","link":"#init","children":[]},{"level":3,"title":"prepare","slug":"prepare","link":"#prepare","children":[]},{"level":3,"title":"build","slug":"build","link":"#build","children":[]},{"level":3,"title":"dev","slug":"dev","link":"#dev","children":[]}]},{"level":2,"title":"Page","slug":"page","link":"#page","children":[{"level":3,"title":"createPage","slug":"createpage","link":"#createpage","children":[]}]},{"level":2,"title":"Page 属性","slug":"page-属性","link":"#page-属性","children":[{"level":3,"title":"key","slug":"key","link":"#key","children":[]},{"level":3,"title":"path","slug":"path","link":"#path","children":[]},{"level":3,"title":"title","slug":"title","link":"#title","children":[]},{"level":3,"title":"lang","slug":"lang","link":"#lang","children":[]},{"level":3,"title":"frontmatter","slug":"frontmatter","link":"#frontmatter","children":[]},{"level":3,"title":"excerpt","slug":"excerpt","link":"#excerpt","children":[]},{"level":3,"title":"headers","slug":"headers","link":"#headers","children":[]},{"level":3,"title":"data","slug":"data","link":"#data","children":[]},{"level":3,"title":"content","slug":"content","link":"#content","children":[]},{"level":3,"title":"contentRendered","slug":"contentrendered","link":"#contentrendered","children":[]},{"level":3,"title":"date","slug":"date","link":"#date","children":[]},{"level":3,"title":"deps","slug":"deps","link":"#deps","children":[]},{"level":3,"title":"hoistedTags","slug":"hoistedtags","link":"#hoistedtags","children":[]},{"level":3,"title":"links","slug":"links","link":"#links","children":[]},{"level":3,"title":"pathInferred","slug":"pathinferred","link":"#pathinferred","children":[]},{"level":3,"title":"pathLocale","slug":"pathlocale","link":"#pathlocale","children":[]},{"level":3,"title":"permalink","slug":"permalink","link":"#permalink","children":[]},{"level":3,"title":"routeMeta","slug":"routemeta","link":"#routemeta","children":[]},{"level":3,"title":"slug","slug":"slug","link":"#slug","children":[]},{"level":3,"title":"filePath","slug":"filepath","link":"#filepath","children":[]},{"level":3,"title":"filePathRelative","slug":"filepathrelative","link":"#filepathrelative","children":[]}]}],"git":{"createdTime":1635758933000,"updatedTime":1639839959000,"contributors":[{"name":"Starzkg","email":"1600337300@qq.com","commits":1},{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn","commits":1}]},"copyright":"","filePathRelative":"zh/vuepress-next/reference/node-api.md","content":"# Node API\\n\\n<NpmBadge package=\\"@vuepress/core\\" />\\n\\nNode API 是由 [@vuepress/core](https://www.npmjs.com/package/@vuepress/clcorei) 包提供的。它是 [vuepress](https://www.npmjs.com/package/vuepress) 包的依赖之一，当然你也可以单独安装它：\\n\\n```bash\\nnpm i -D @vuepress/core@next\\n```\\n\\n## App\\n\\n[插件 API](./plugin-api.md) 的所有 Hooks 中都可以获取到 App 实例。\\n\\n`BuildApp` 和 `DevApp` 除了 [build](#build) 和 [dev](#dev) 方法外，拥有一样的属性和方法。\\n\\n### createBuildApp\\n\\n- 函数签名：\\n\\n```ts\\nconst createBuildApp: (config: AppConfig) => BuildApp;\\n```\\n\\n- 参数：\\n\\n| 参数      | 类型         | 描述                      |\\n|-----------|-------------|---------------------------|\\n| config    | `AppConfig` | 创建 VuePress App 的选项。 |\\n\\n- 详情：\\n\\n  创建一个 Build 模式的 App 实例，用于构建静态文件。\\n\\n- 示例：\\n\\n```ts\\nconst build = async () => {\\n  const app = createBuildApp({\\n    // ...配置项\\n  })\\n\\n  // 初始化和准备\\n  await app.init()\\n  await app.prepare()\\n\\n  // 构建\\n  await app.build()\\n\\n  // 处理 onGenerated hook\\n  await app.pluginApi.hooks.onGenerated.process(app)\\n}\\n```\\n\\n- 参考：\\n  - [Node API > App 方法 > build](#build)\\n\\n### createDevApp\\n\\n- 函数签名：\\n\\n```ts\\nconst createDevApp: (config: AppConfig) => DevApp\\n```\\n\\n- 参数：\\n\\n| 参数      | 类型         | 描述                      |\\n|-----------|-------------|---------------------------|\\n| config    | `AppConfig` | 创建 VuePress App 的选项。 |\\n\\n- 详情：\\n\\n  创建一个 Dev 模式的 App 实例，用于启动开发服务器。\\n\\n- 示例：\\n\\n```ts\\nconst dev = async () => {\\n  const app = createDevApp({\\n    // ...配置项\\n  })\\n\\n  // 初始化和准备\\n  await app.init()\\n  await app.prepare()\\n\\n  // 启动开发服务器\\n  const closeDevServer = await app.dev()\\n\\n  // 准备文件监听器\\n  const watchers = []\\n\\n  // 重启开发服务器\\n  const restart = async () => {\\n    await Promise.all([\\n      // 关闭所有监听器\\n      ...watchers.map((item) => item.close()),\\n      // 关闭当前的开发服务器\\n      closeDevServer(),\\n    ])\\n    await dev()\\n  }\\n\\n  // 处理 onWatched hook\\n  await app.pluginApi.hooks.onWatched.process(app, watchers, restart)\\n}\\n```\\n\\n- 参考：\\n  - [Node API > App 方法 > dev](#dev)\\n\\n## App 属性\\n\\n### version\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  VuePress App 的版本，即 `@vuepress/core` 包的版本。\\n\\n### options\\n\\n- 类型： `AppOptions`\\n\\n- 详情：\\n\\n  VuePress App 的配置项。\\n\\n  这些配置项来自于 [createBuildApp](#createbuildapp) / [createDevApp](#createdevapp) 的 `config` 参数，但所有可选的字段都填充上了默认值。\\n\\n### env.isBuild\\n\\n- 类型： `boolean`\\n\\n- 详情：\\n\\n  用于判断 App 是否运行在 Build 模式的环境标记，即当前 App 是否是 [BuildApp](#createbuildapp) 实例。\\n\\n### env.isDev\\n\\n- 类型： `boolean`\\n\\n- 详情：\\n\\n  用于判断 App 是否运行在 Dev 模式的环境标记，即当前 App 是否是 [DevApp](#createdevapp) 实例。\\n\\n### env.isDebug\\n\\n- 类型： `boolean`\\n\\n- 详情：\\n\\n  用于判断 App 是否开启 Debug 模式的环境标记。\\n\\n### siteData\\n\\n- 类型： `SiteData`\\n\\n- 详情：\\n\\n  由用户设置的站点数据，包含所有的 [站点配置](./config.md#站点配置) ，可以在客户端代码中使用。\\n\\n### markdown\\n\\n- 类型： `MarkdownIt`\\n\\n- 详情：\\n\\n  用于解析 Markdown 内容的 [markdown-it](https://github.com/markdown-it/markdown-it) 实例。\\n\\n  它仅在 [onInitialized](./plugin-api.md#oninitialized) 以及之后的 Hooks 中才可用。\\n\\n### layouts\\n\\n- 类型： `Record<string, string>`\\n\\n- 详情：\\n\\n  布局组件 Map ，其键为布局名称，对应值为布局组件的绝对文件路径。\\n\\n  它仅在 [onInitialized](./plugin-api.md#oninitialized) 以及之后的 Hooks 中才可用。\\n\\n### pages\\n\\n- 类型： `Page[]`\\n\\n- 详情：\\n\\n  [Page](#page) 对象数组。\\n\\n  它仅在 [onInitialized](./plugin-api.md#oninitialized) 以及之后的 Hooks 中才可用。\\n\\n## App 方法\\n\\n### dir\\n\\n- 工具函数：\\n  - `dir.cache()`： 解析至缓存目录\\n  - `dir.temp()`： 解析至临时文件目录\\n  - `dir.source()`： 解析至源文件目录\\n  - `dir.dest()`： 解析至输出目录\\n  - `dir.client()`： 解析至 `@vuepress/client` 目录\\n  - `dir.public()`： 解析至 Public 文件目录\\n\\n- 函数签名：\\n\\n```ts\\ntype AppDirFunction = (...args: string[]) => string\\n```\\n\\n- 详情：\\n\\n  用于解析对应目录下的文件绝对路径的一些工具函数。\\n\\n  如果你不传入任何参数，就会返回对应目录的绝对路径。\\n\\n- 示例：\\n\\n```ts\\n// 解析 `${sourceDir}/README.md` 文件的绝对路径\\nconst homeSourceFile = app.dir.source(\'README.md\')\\n```\\n\\n### writeTemp\\n\\n- 函数签名：\\n\\n```ts\\nwriteTemp(file: string, content: string): Promise<string>\\n```\\n\\n- 参数：\\n\\n| 参数      | 类型      | 描述                                      |\\n|-----------|----------|-------------------------------------------|\\n| file      | `string` | 要写入的临时文件的路径，相对于临时文件目录。 |\\n| content   | `string` | 要写入的临时文件路径的内容。                |\\n\\n- 详情：\\n\\n  用于写入临时文件的方法。\\n\\n  写入的文件可以在客户端文件中通过 `@temp` 别名来引入。\\n\\n- 示例：\\n\\n```js\\nmodule.exports = {\\n  // 在 onPrepared hook 中写入临时文件\\n  async onPrepared() {\\n    await app.writeTemp(\'foo.js\', \'export const foo = \\\\\'bar\\\\\'\')\\n  }\\n}\\n```\\n\\n```ts\\n// 在客户端文件中引入临时文件\\nimport { foo } from \'@temp/foo\'\\n```\\n\\n### init\\n\\n- 函数签名：\\n\\n```ts\\ninit(): Promise<void>\\n```\\n\\n- 详情：\\n\\n  初始化 VuePress App 。\\n\\n- 参考：\\n  - [深入 > 架构 > 核心流程与 Hooks](../advanced/architecture.md#核心流程与-hooks)\\n\\n### prepare\\n\\n- 函数签名：\\n\\n```ts\\nprepare(): Promise<void>\\n```\\n\\n- 详情：\\n\\n  准备客户端临时文件。\\n\\n- 参考：\\n  - [深入 > 架构 > 核心流程与 Hooks](../advanced/architecture.md#核心流程与-hooks)\\n\\n### build\\n\\n- 函数签名：\\n\\n```ts\\nbuild(): Promise<void>\\n```\\n\\n- 详情：\\n\\n  生成静态站点文件。\\n\\n  该方法仅在 [BuildApp](#createbuildapp) 中可用。\\n\\n- 参考：\\n  - [深入 > 架构 > 核心流程与 Hooks](../advanced/architecture.md#核心流程与-hooks)\\n\\n### dev\\n\\n- 函数签名：\\n\\n```ts\\ndev(): Promise<() => Promise<void>>\\n```\\n\\n- 详情：\\n\\n  启动开发服务器。\\n\\n  该方法仅在 [DevApp](#createdevapp) 中可用。\\n\\n- 参考：\\n  - [深入 > 架构 > 核心流程与 Hooks](../advanced/architecture.md#核心流程与-hooks)\\n\\n## Page\\n\\n### createPage\\n\\n- 函数签名：\\n\\n```ts\\nconst createPage: (app: App, options: PageOptions) => Promise<Page>\\n```\\n\\n- 参数：\\n\\n| 参数      | 类型          | 描述                        |\\n|-----------|---------------|----------------------------|\\n| app       | `App`         | VuePress App 实例。        |\\n| options   | `PageOptions` | 创建 VuePress Page 的选项。 |\\n\\n- 详情：\\n\\n  创建一个 VuePress Page 对象。\\n\\n- 示例：\\n\\n```ts\\nconst { createPage } = require(\'@vuepress/core\')\\n\\nmodule.exports = {\\n  // 在 onInitialized hook 中创建一个额外页面\\n  async onInitialized(app) {\\n    app.pages.push(\\n      await createPage(app, {\\n        path: \'/foo.html\',\\n        frontmatter: {\\n          layout: \'Layout\',\\n        },\\n        content: `\\\\\\n# 某个 Page\\n\\n你好，世界。\\n`,\\n      })\\n    )\\n  }\\n}\\n```\\n\\n- 参考：\\n  - [Node API > App 属性 > pages](#pages)\\n  - [Cookbook > 添加额外页面](../advanced/cookbook/adding-extra-pages.md)\\n\\n## Page 属性\\n\\n### key\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的标识。\\n\\n  Page Key 会被用作页面路由的 [name](https://next.router.vuejs.org/api/#name-2)。\\n\\n- 参考：\\n  - [Built-in Components > Content](./components.md#content)\\n\\n### path\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的路由路径。\\n\\n- 参考：\\n  - [指南 > 页面 > 路由](../guide/page.md#路由)\\n  - [Node API > Page 属性 > pathInferred](#pathinferred)\\n\\n### title\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的标题。\\n\\n- 参考：\\n  - [Frontmatter > title](./frontmatter.md#title)\\n\\n### lang\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的语言。\\n\\n- 示例：\\n  - `\'en-US\'`\\n  - `\'zh-CN\'`\\n\\n- 参考：\\n  - [Frontmatter > lang](./frontmatter.md#title)\\n\\n### frontmatter\\n\\n- 类型： `PageFrontmatter`\\n\\n- 详情：\\n\\n  该 Page 的 Frontmatter 。\\n\\n- 参考：\\n  - [Frontmatter](./frontmatter.md)\\n\\n### excerpt\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的摘要。\\n\\n  如果一个 Markdown 文件中包含一个 `\x3c!-- more --\x3e` 注释，那么该注释上方的内容都会被作为摘要提取并渲染。\\n\\n  如果你在创建一个用于博客的自定义主题，那么它可以帮助你创建一个包含摘要的文章列表。\\n\\n- 示例：\\n\\n```md\\n在 `\x3c!-- more --\x3e` 注释上方的内容会被当作摘要。\\n\\n建议你在该注释前后添加空行，以避免渲染问题。\\n\\n\x3c!-- more --\x3e\\n\\n在 `\x3c!-- more --\x3e` 注释下方的内容不会被当作摘要。\\n```\\n\\n### headers\\n\\n- 类型： `PageHeader[]`\\n\\n```ts\\ninterface PageHeader {\\n  level: number\\n  title: string\\n  slug: string\\n  children: PageHeader[]\\n}\\n```\\n\\n- 详情：\\n\\n  该 Page 的小标题。\\n\\n- 参考：\\n  - [配置 > markdown.extractHeaders](./config.md#markdown-extractheaders)\\n\\n### data\\n\\n- 类型： `PageData`\\n\\n```ts\\ninterface PageData {\\n  key: string\\n  path: string\\n  title: string\\n  lang: string\\n  frontmatter: PageFrontmatter\\n  excerpt: string\\n  headers: PageHeader[]\\n}\\n```\\n\\n- 详情：\\n\\n  该 Page 的数据。\\n\\n  Page 数据可以在客户端代码中使用。\\n\\n- 参考：\\n  - [客户端 API > usePageData](./client-api.md#usepagedata)\\n  - [插件 API > extendsPage](./plugin-api.md#extendspage)\\n\\n### content\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的未经渲染的原始内容。\\n\\n### contentRendered\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的渲染后的内容。\\n\\n### date\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的日期，遵从 \'yyyy-MM-dd\' 格式。\\n\\n- 示例：\\n  - `\'0000-00-00\'`\\n  - `\'2021-08-16`\'\\n\\n- 参考：\\n  - [Frontmatter > date](./frontmatter.md#date)\\n\\n### deps\\n\\n- 类型： `string[]`\\n\\n- 详情：\\n\\n  该 Page 的依赖。\\n\\n  举例来说，如果在页面中导入了代码片段，那么被导入文件的绝对路径就会被添加到 `deps` 中。\\n\\n- 参考：\\n  - [配置 > markdown.importCode](./config.md#markdown-importcode)\\n\\n### hoistedTags\\n\\n- 类型： `string[]`\\n\\n- 详情：\\n\\n  该 Page 中提升的 Tags。\\n\\n- 参考：\\n  - [配置 > markdown.hoistTags](./config.md#markdown-hoisttags)\\n\\n### links\\n\\n- 类型： `MarkdownLink[]`\\n\\n```ts\\ninterface MarkdownLink {\\n  raw: string\\n  relative: string\\n  absolute: string\\n}\\n```\\n\\n- 详情：\\n\\n  该 Page 中的链接。\\n\\n### pathInferred\\n\\n- 类型： `string | null`\\n\\n- 详情：\\n\\n  该 Page 根据文件路径推断出的路由路径。\\n\\n  默认情况下，路由路径是根据 Markdown 源文件的相对文件路径推断出来的。然而，用户可能会显式指定页面路由，比如通过 [permalink](#permalink) 来指定该页面最终使用的路由路径。因此我们在 Page 属性中保留推断出来的路径，以便于你在某些情况下可能会用到它。\\n\\n  如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 `null` 。\\n\\n- 示例：\\n  - `\'/\'`\\n  - `\'/foo.html\'`\\n\\n- 参考：\\n  - [指南 > 页面 > 路由](../guide/page.md#路由)\\n  - [Node API > Page 属性 > path](#path)\\n\\n### pathLocale\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 路由路径的 Locale 前缀。\\n\\n  它是根据页面的 Markdown 源文件相对路径、以及用户配置的 `locales` 的键推断得到的。\\n\\n- 示例：\\n  - `\'/\'`\\n  - `\'/en/\'`\\n  - `\'/zh/\'`\\n\\n- 参考：\\n  - [配置 > locales](./config.md#locales)\\n\\n### permalink\\n\\n- 类型： `string | null`\\n\\n- 详情：\\n\\n  该 Page 的永久链接。\\n\\n- 参考：\\n  - [Frontmatter > permalink](./frontmatter.md#permalink)\\n  - [Frontmatter > permalinkPattern](./frontmatter.md#permalinkpattern)\\n\\n\\n### routeMeta\\n\\n- 类型： `Record<string, unknown>`\\n\\n- 详情：\\n\\n  附加到 vue-router 路由记录上的额外数据。\\n\\n- 参考：\\n  - [Frontmatter > routeMeta](./frontmatter.md#routemeta)\\n  - [vue-router > API 参考 > RouteRecordRaw > meta](https://next.router.vuejs.org/zh/api/#meta)\\n\\n::: tip Route Meta 和 Page Data 的区别是什么？\\n[Route Meta](#routemeta) 和 [Page Data](#data) 都可以在客户端代码中使用。然而， Route Meta 是附加在路由记录上的，因此当用户进入你的站点时，所有页面的 Route Meta 都会立即被加载。相比之下， Page Data 是存储在单独的文件中的，只有在用户进入对应页面时才会被加载。\\n\\n因此，不建议在 Route Meta 中存储大量的信息，否则在站点有很多页面时，将会影响站点的初始加载速度。\\n:::\\n\\n### slug\\n\\n- 类型： `string`\\n\\n- 详情：\\n\\n  该 Page 的 Slug 。\\n\\n  它是根据页面的 Markdown 源文件的文件名推断得到的。\\n\\n### filePath\\n\\n- 类型： `string | null`\\n\\n- 详情：\\n\\n  该 Page 的 Markdown 源文件的绝对路径。\\n\\n  如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 `null` 。\\n\\n### filePathRelative\\n\\n- 类型： `string | null`\\n\\n- 详情：\\n\\n  该 Page 的 Markdown 源文件的相对路径。\\n\\n  如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 `null` 。\\n","author":[{"name":"Starzkg","email":"1600337300@qq.com"},{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn"}],"top":false,"length":2303,"words":2303,"readingTime":7.68}')},81994:(n,s,e)=>{e.r(s),e.d(s,{default:()=>Xs});var a=e(1863);const l=(0,a._)("h1",{id:"node-api",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#node-api","aria-hidden":"true"},"#"),(0,a.Uk)(" Node API")],-1),p={href:"https://www.npmjs.com/package/@vuepress/clcorei",target:"_blank",rel:"noopener noreferrer"},o={href:"https://www.npmjs.com/package/vuepress",target:"_blank",rel:"noopener noreferrer"},r={class:"code-enhance"},t=(0,a.uE)('<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/core@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),i=(0,a._)("h2",{id:"app",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#app","aria-hidden":"true"},"#"),(0,a.Uk)(" App")],-1),c=(0,a.uE)('<p><code>BuildApp</code> 和 <code>DevApp</code> 除了 <a href="#build">build</a> 和 <a href="#dev">dev</a> 方法外，拥有一样的属性和方法。</p><h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp" aria-hidden="true">#</a> createBuildApp</h3><ul><li>函数签名：</li></ul>',3),d={class:"code-enhance"},D=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createBuildApp</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AppConfig</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">BuildApp</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),u=(0,a.uE)("<ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Build 模式的 App 实例，用于构建静态文件。</p></li><li><p>示例：</p></li></ul>",3),y={class:"code-enhance"},h=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createBuildApp</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ...配置项</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 初始化和准备</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 构建</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 处理 onGenerated hook</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pluginApi</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hooks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onGenerated</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),v=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("参考： "),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",{href:"#build"},"Node API > App 方法 > build")])])])],-1),m=(0,a._)("h3",{id:"createdevapp",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#createdevapp","aria-hidden":"true"},"#"),(0,a.Uk)(" createDevApp")],-1),g=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),C={class:"code-enhance"},b=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createDevApp</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AppConfig</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DevApp</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),k=(0,a.uE)("<ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Dev 模式的 App 实例，用于启动开发服务器。</p></li><li><p>示例：</p></li></ul>",3),E={class:"code-enhance"},A=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createDevApp</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ...配置项</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 初始化和准备</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 启动开发服务器</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">closeDevServer</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 准备文件监听器</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">watchers</span><span style="color:#D4D4D4;"> = []</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 重启开发服务器</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">restart</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">all</span><span style="color:#D4D4D4;">([</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 关闭所有监听器</span></span>\n<span class="line"><span style="color:#D4D4D4;">      ...</span><span style="color:#9CDCFE;">watchers</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">close</span><span style="color:#D4D4D4;">()),</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 关闭当前的开发服务器</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">closeDevServer</span><span style="color:#D4D4D4;">(),</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ])</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 处理 onWatched hook</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pluginApi</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hooks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onWatched</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">watchers</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">restart</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),_=(0,a.uE)('<ul><li>参考： <ul><li><a href="#dev">Node API &gt; App 方法 &gt; dev</a></li></ul></li></ul><h2 id="app-属性" tabindex="-1"><a class="header-anchor" href="#app-属性" aria-hidden="true">#</a> App 属性</h2><h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>VuePress App 的版本，即 <code>@vuepress/core</code> 包的版本。</p></li></ul><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li><p>类型： <code>AppOptions</code></p></li><li><p>详情：</p><p>VuePress App 的配置项。</p><p>这些配置项来自于 <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a> 的 <code>config</code> 参数，但所有可选的字段都填充上了默认值。</p></li></ul><h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild" aria-hidden="true">#</a> env.isBuild</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Build 模式的环境标记，即当前 App 是否是 <a href="#createbuildapp">BuildApp</a> 实例。</p></li></ul><h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev" aria-hidden="true">#</a> env.isDev</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Dev 模式的环境标记，即当前 App 是否是 <a href="#createdevapp">DevApp</a> 实例。</p></li></ul><h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug" aria-hidden="true">#</a> env.isDebug</h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否开启 Debug 模式的环境标记。</p></li></ul><h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata" aria-hidden="true">#</a> siteData</h3>',13),f=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"SiteData")])],-1),P=(0,a._)("p",null,"详情：",-1),x=(0,a._)("h3",{id:"markdown",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#markdown","aria-hidden":"true"},"#"),(0,a.Uk)(" markdown")],-1),F=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"MarkdownIt")])],-1),B=(0,a._)("p",null,"详情：",-1),w={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},U=(0,a._)("h3",{id:"layouts",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#layouts","aria-hidden":"true"},"#"),(0,a.Uk)(" layouts")],-1),z=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"Record<string, string>")])],-1),R=(0,a._)("p",null,"详情：",-1),I=(0,a._)("p",null,"布局组件 Map ，其键为布局名称，对应值为布局组件的绝对文件路径。",-1),W=(0,a._)("h3",{id:"pages",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pages","aria-hidden":"true"},"#"),(0,a.Uk)(" pages")],-1),M=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"Page[]")])],-1),L=(0,a._)("p",null,"详情：",-1),H=(0,a._)("p",null,[(0,a._)("a",{href:"#page"},"Page"),(0,a.Uk)(" 对象数组。")],-1),N=(0,a.uE)('<h2 id="app-方法" tabindex="-1"><a class="header-anchor" href="#app-方法" aria-hidden="true">#</a> App 方法</h2><h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> dir</h3><ul><li><p>工具函数：</p><ul><li><code>dir.cache()</code>： 解析至缓存目录</li><li><code>dir.temp()</code>： 解析至临时文件目录</li><li><code>dir.source()</code>： 解析至源文件目录</li><li><code>dir.dest()</code>： 解析至输出目录</li><li><code>dir.client()</code>： 解析至 <code>@vuepress/client</code> 目录</li><li><code>dir.public()</code>： 解析至 Public 文件目录</li></ul></li><li><p>函数签名：</p></li></ul>',3),V={class:"code-enhance"},S=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppDirFunction</span><span style="color:#D4D4D4;"> = (...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),T=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"用于解析对应目录下的文件绝对路径的一些工具函数。"),(0,a._)("p",null,"如果你不传入任何参数，就会返回对应目录的绝对路径。")]),(0,a._)("li",null,[(0,a._)("p",null,"示例：")])],-1),j={class:"code-enhance"},O=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// 解析 `${sourceDir}/README.md` 文件的绝对路径</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">homeSourceFile</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">dir</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;README.md&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',1),q=(0,a._)("h3",{id:"writetemp",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#writetemp","aria-hidden":"true"},"#"),(0,a.Uk)(" writeTemp")],-1),G=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),K={class:"code-enhance"},$=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">writeTemp</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">file</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),J=(0,a.uE)("<ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td><code>string</code></td><td>要写入的临时文件的路径，相对于临时文件目录。</td></tr><tr><td>content</td><td><code>string</code></td><td>要写入的临时文件路径的内容。</td></tr></tbody></table><ul><li><p>详情：</p><p>用于写入临时文件的方法。</p><p>写入的文件可以在客户端文件中通过 <code>@temp</code> 别名来引入。</p></li><li><p>示例：</p></li></ul>",3),Z={class:"code-enhance"},Q=(0,a.uE)('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 在 onPrepared hook 中写入临时文件</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">onPrepared</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">writeTemp</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;foo.js&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;export const foo = </span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">bar</span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),X={class:"code-enhance"},Y=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// 在客户端文件中引入临时文件</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@temp/foo&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',1),nn=(0,a._)("h3",{id:"init",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#init","aria-hidden":"true"},"#"),(0,a.Uk)(" init")],-1),sn=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),en={class:"code-enhance"},an=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),ln=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"初始化 VuePress App 。")],-1),pn=(0,a._)("p",null,"参考：",-1),on=(0,a._)("h3",{id:"prepare",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#prepare","aria-hidden":"true"},"#"),(0,a.Uk)(" prepare")],-1),rn=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),tn={class:"code-enhance"},cn=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),dn=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"准备客户端临时文件。")],-1),Dn=(0,a._)("p",null,"参考：",-1),un=(0,a._)("h3",{id:"build",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#build","aria-hidden":"true"},"#"),(0,a.Uk)(" build")],-1),yn=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),hn={class:"code-enhance"},vn=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),mn=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"生成静态站点文件。"),(0,a._)("p",null,[(0,a.Uk)("该方法仅在 "),(0,a._)("a",{href:"#createbuildapp"},"BuildApp"),(0,a.Uk)(" 中可用。")])],-1),gn=(0,a._)("p",null,"参考：",-1),Cn=(0,a._)("h3",{id:"dev",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#dev","aria-hidden":"true"},"#"),(0,a.Uk)(" dev")],-1),bn=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),kn={class:"code-enhance"},En=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),An=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"启动开发服务器。"),(0,a._)("p",null,[(0,a.Uk)("该方法仅在 "),(0,a._)("a",{href:"#createdevapp"},"DevApp"),(0,a.Uk)(" 中可用。")])],-1),_n=(0,a._)("p",null,"参考：",-1),fn=(0,a._)("h2",{id:"page",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#page","aria-hidden":"true"},"#"),(0,a.Uk)(" Page")],-1),Pn=(0,a._)("h3",{id:"createpage",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#createpage","aria-hidden":"true"},"#"),(0,a.Uk)(" createPage")],-1),xn=(0,a._)("ul",null,[(0,a._)("li",null,"函数签名：")],-1),Fn={class:"code-enhance"},Bn=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createPage</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">App</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageOptions</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Page</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),wn=(0,a.uE)("<ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>app</td><td><code>App</code></td><td>VuePress App 实例。</td></tr><tr><td>options</td><td><code>PageOptions</code></td><td>创建 VuePress Page 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 VuePress Page 对象。</p></li><li><p>示例：</p></li></ul>",3),Un={class:"code-enhance"},zn=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">createPage</span><span style="color:#D4D4D4;"> } = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;@vuepress/core&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 在 onInitialized hook 中创建一个额外页面</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">onInitialized</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createPage</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">path:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;/foo.html&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">frontmatter:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">layout:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Layout&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">content:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">`</span><span style="color:#D7BA7D;">\\</span></span>\n<span class="line"><span style="color:#CE9178;"># 某个 Page</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#CE9178;">你好，世界。</span></span>\n<span class="line"><span style="color:#CE9178;">`</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      })</span></span>\n<span class="line"><span style="color:#D4D4D4;">    )</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Rn=(0,a._)("li",null,[(0,a._)("a",{href:"#pages"},"Node API > App 属性 > pages")],-1),In=(0,a._)("h2",{id:"page-属性",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#page-属性","aria-hidden":"true"},"#"),(0,a.Uk)(" Page 属性")],-1),Wn=(0,a._)("h3",{id:"key",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#key","aria-hidden":"true"},"#"),(0,a.Uk)(" key")],-1),Mn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),Ln=(0,a._)("p",null,"详情：",-1),Hn=(0,a._)("p",null,"该 Page 的标识。",-1),Nn={href:"https://next.router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},Vn=(0,a._)("p",null,"参考：",-1),Sn=(0,a._)("h3",{id:"path",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#"),(0,a.Uk)(" path")],-1),Tn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),jn=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的路由路径。")],-1),On=(0,a._)("p",null,"参考：",-1),qn=(0,a._)("li",null,[(0,a._)("a",{href:"#pathinferred"},"Node API > Page 属性 > pathInferred")],-1),Gn=(0,a._)("h3",{id:"title",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#title","aria-hidden":"true"},"#"),(0,a.Uk)(" title")],-1),Kn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),$n=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的标题。")],-1),Jn=(0,a._)("p",null,"参考：",-1),Zn=(0,a._)("h3",{id:"lang",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#lang","aria-hidden":"true"},"#"),(0,a.Uk)(" lang")],-1),Qn=(0,a.uE)("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的语言。</p></li><li><p>示例：</p><ul><li><code>&#39;en-US&#39;</code></li><li><code>&#39;zh-CN&#39;</code></li></ul></li>",3),Xn=(0,a._)("p",null,"参考：",-1),Yn=(0,a._)("h3",{id:"frontmatter",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),(0,a.Uk)(" frontmatter")],-1),ns=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"PageFrontmatter")])],-1),ss=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的 Frontmatter 。")],-1),es=(0,a._)("p",null,"参考：",-1),as=(0,a.uE)('<h3 id="excerpt" tabindex="-1"><a class="header-anchor" href="#excerpt" aria-hidden="true">#</a> excerpt</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的摘要。</p><p>如果一个 Markdown 文件中包含一个 <code>&lt;!-- more --&gt;</code> 注释，那么该注释上方的内容都会被作为摘要提取并渲染。</p><p>如果你在创建一个用于博客的自定义主题，那么它可以帮助你创建一个包含摘要的文章列表。</p></li><li><p>示例：</p></li></ul>',2),ls={class:"code-enhance"},ps=(0,a.uE)('<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">在 </span><span style="color:#CE9178;">`&lt;!-- more --&gt;`</span><span style="color:#D4D4D4;"> 注释上方的内容会被当作摘要。</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">建议你在该注释前后添加空行，以避免渲染问题。</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- more --&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">在 </span><span style="color:#CE9178;">`&lt;!-- more --&gt;`</span><span style="color:#D4D4D4;"> 注释下方的内容不会被当作摘要。</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),os=(0,a._)("h3",{id:"headers",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#headers","aria-hidden":"true"},"#"),(0,a.Uk)(" headers")],-1),rs=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"PageHeader[]")])],-1),ts={class:"code-enhance"},is=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">level</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">slug</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">children</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),cs=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的小标题。")],-1),ds=(0,a._)("p",null,"参考：",-1),Ds=(0,a._)("h3",{id:"data",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#data","aria-hidden":"true"},"#"),(0,a.Uk)(" data")],-1),us=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"PageData")])],-1),ys={class:"code-enhance"},hs=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageData</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">lang</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">frontmatter</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageFrontmatter</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">excerpt</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),vs=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的数据。"),(0,a._)("p",null,"Page 数据可以在客户端代码中使用。")],-1),ms=(0,a._)("p",null,"参考：",-1),gs=(0,a.uE)('<h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的未经渲染的原始内容。</p></li></ul><h3 id="contentrendered" tabindex="-1"><a class="header-anchor" href="#contentrendered" aria-hidden="true">#</a> contentRendered</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的渲染后的内容。</p></li></ul><h3 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> date</h3>',5),Cs=(0,a.uE)("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的日期，遵从 ‘yyyy-MM-dd’ 格式。</p></li><li><p>示例：</p><ul><li><code>&#39;0000-00-00&#39;</code></li><li><code>&#39;2021-08-16</code>’</li></ul></li>",3),bs=(0,a._)("p",null,"参考：",-1),ks=(0,a._)("h3",{id:"deps",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#deps","aria-hidden":"true"},"#"),(0,a.Uk)(" deps")],-1),Es=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string[]")])],-1),As=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的依赖。"),(0,a._)("p",null,[(0,a.Uk)("举例来说，如果在页面中导入了代码片段，那么被导入文件的绝对路径就会被添加到 "),(0,a._)("code",null,"deps"),(0,a.Uk)(" 中。")])],-1),_s=(0,a._)("p",null,"参考：",-1),fs=(0,a._)("h3",{id:"hoistedtags",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#hoistedtags","aria-hidden":"true"},"#"),(0,a.Uk)(" hoistedTags")],-1),Ps=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string[]")])],-1),xs=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 中提升的 Tags。")],-1),Fs=(0,a._)("p",null,"参考：",-1),Bs=(0,a._)("h3",{id:"links",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#links","aria-hidden":"true"},"#"),(0,a.Uk)(" links")],-1),ws=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"MarkdownLink[]")])],-1),Us={class:"code-enhance"},zs=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownLink</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">raw</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">relative</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">absolute</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Rs=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 中的链接。")])],-1),Is=(0,a._)("h3",{id:"pathinferred",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pathinferred","aria-hidden":"true"},"#"),(0,a.Uk)(" pathInferred")],-1),Ws=(0,a.uE)('<li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 根据文件路径推断出的路由路径。</p><p>默认情况下，路由路径是根据 Markdown 源文件的相对文件路径推断出来的。然而，用户可能会显式指定页面路由，比如通过 <a href="#permalink">permalink</a> 来指定该页面最终使用的路由路径。因此我们在 Page 属性中保留推断出来的路径，以便于你在某些情况下可能会用到它。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/foo.html&#39;</code></li></ul></li>',3),Ms=(0,a._)("p",null,"参考：",-1),Ls=(0,a._)("li",null,[(0,a._)("a",{href:"#path"},"Node API > Page 属性 > path")],-1),Hs=(0,a._)("h3",{id:"pathlocale",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pathlocale","aria-hidden":"true"},"#"),(0,a.Uk)(" pathLocale")],-1),Ns=(0,a.uE)("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 路由路径的 Locale 前缀。</p><p>它是根据页面的 Markdown 源文件相对路径、以及用户配置的 <code>locales</code> 的键推断得到的。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/en/&#39;</code></li><li><code>&#39;/zh/&#39;</code></li></ul></li>",3),Vs=(0,a._)("p",null,"参考：",-1),Ss=(0,a._)("h3",{id:"permalink",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#permalink","aria-hidden":"true"},"#"),(0,a.Uk)(" permalink")],-1),Ts=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string | null")])],-1),js=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"该 Page 的永久链接。")],-1),Os=(0,a._)("p",null,"参考：",-1),qs=(0,a._)("h3",{id:"routemeta",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#routemeta","aria-hidden":"true"},"#"),(0,a.Uk)(" routeMeta")],-1),Gs=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"Record<string, unknown>")])],-1),Ks=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"附加到 vue-router 路由记录上的额外数据。")],-1),$s=(0,a._)("p",null,"参考：",-1),Js={href:"https://next.router.vuejs.org/zh/api/#meta",target:"_blank",rel:"noopener noreferrer"},Zs=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">Route Meta 和 Page Data 的区别是什么？</p><p><a href="#routemeta">Route Meta</a> 和 <a href="#data">Page Data</a> 都可以在客户端代码中使用。然而， Route Meta 是附加在路由记录上的，因此当用户进入你的站点时，所有页面的 Route Meta 都会立即被加载。相比之下， Page Data 是存储在单独的文件中的，只有在用户进入对应页面时才会被加载。</p><p>因此，不建议在 Route Meta 中存储大量的信息，否则在站点有很多页面时，将会影响站点的初始加载速度。</p></div><h3 id="slug" tabindex="-1"><a class="header-anchor" href="#slug" aria-hidden="true">#</a> slug</h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的 Slug 。</p><p>它是根据页面的 Markdown 源文件的文件名推断得到的。</p></li></ul><h3 id="filepath" tabindex="-1"><a class="header-anchor" href="#filepath" aria-hidden="true">#</a> filePath</h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的绝对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul><h3 id="filepathrelative" tabindex="-1"><a class="header-anchor" href="#filepathrelative" aria-hidden="true">#</a> filePathRelative</h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的相对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul>',7),Qs={},Xs=(0,e(94598).Z)(Qs,[["render",function(n,s){const e=(0,a.up)("NpmBadge"),Qs=(0,a.up)("ExternalLinkIcon"),Xs=(0,a.up)("CodeCopyButton"),Ys=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)("div",null,[l,(0,a.Wm)(e,{package:"@vuepress/core"}),(0,a._)("p",null,[(0,a.Uk)("Node API 是由 "),(0,a._)("a",p,[(0,a.Uk)("@vuepress/core"),(0,a.Wm)(Qs)]),(0,a.Uk)(" 包提供的。它是 "),(0,a._)("a",o,[(0,a.Uk)("vuepress"),(0,a.Wm)(Qs)]),(0,a.Uk)(" 包的依赖之一，当然你也可以单独安装它：")]),(0,a._)("div",r,[t,(0,a.Wm)(Xs)]),i,(0,a._)("p",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/plugin-api.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("插件 API")])),_:1}),(0,a.Uk)(" 的所有 Hooks 中都可以获取到 App 实例。")]),c,(0,a._)("div",d,[D,(0,a.Wm)(Xs)]),u,(0,a._)("div",y,[h,(0,a.Wm)(Xs)]),v,m,g,(0,a._)("div",C,[b,(0,a.Wm)(Xs)]),k,(0,a._)("div",E,[A,(0,a.Wm)(Xs)]),_,(0,a._)("ul",null,[f,(0,a._)("li",null,[P,(0,a._)("p",null,[(0,a.Uk)("由用户设置的站点数据，包含所有的 "),(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/config.html#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE"},{default:(0,a.w5)((()=>[(0,a.Uk)("站点配置")])),_:1}),(0,a.Uk)(" ，可以在客户端代码中使用。")])])]),x,(0,a._)("ul",null,[F,(0,a._)("li",null,[B,(0,a._)("p",null,[(0,a.Uk)("用于解析 Markdown 内容的 "),(0,a._)("a",w,[(0,a.Uk)("markdown-it"),(0,a.Wm)(Qs)]),(0,a.Uk)(" 实例。")]),(0,a._)("p",null,[(0,a.Uk)("它仅在 "),(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/plugin-api.html#oninitialized"},{default:(0,a.w5)((()=>[(0,a.Uk)("onInitialized")])),_:1}),(0,a.Uk)(" 以及之后的 Hooks 中才可用。")])])]),U,(0,a._)("ul",null,[z,(0,a._)("li",null,[R,I,(0,a._)("p",null,[(0,a.Uk)("它仅在 "),(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/plugin-api.html#oninitialized"},{default:(0,a.w5)((()=>[(0,a.Uk)("onInitialized")])),_:1}),(0,a.Uk)(" 以及之后的 Hooks 中才可用。")])])]),W,(0,a._)("ul",null,[M,(0,a._)("li",null,[L,H,(0,a._)("p",null,[(0,a.Uk)("它仅在 "),(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/plugin-api.html#oninitialized"},{default:(0,a.w5)((()=>[(0,a.Uk)("onInitialized")])),_:1}),(0,a.Uk)(" 以及之后的 Hooks 中才可用。")])])]),N,(0,a._)("div",V,[S,(0,a.Wm)(Xs)]),T,(0,a._)("div",j,[O,(0,a.Wm)(Xs)]),q,G,(0,a._)("div",K,[$,(0,a.Wm)(Xs)]),J,(0,a._)("div",Z,[Q,(0,a.Wm)(Xs)]),(0,a._)("div",X,[Y,(0,a.Wm)(Xs)]),nn,sn,(0,a._)("div",en,[an,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[ln,(0,a._)("li",null,[pn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:(0,a.w5)((()=>[(0,a.Uk)("深入 > 架构 > 核心流程与 Hooks")])),_:1})])])])]),on,rn,(0,a._)("div",tn,[cn,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[dn,(0,a._)("li",null,[Dn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:(0,a.w5)((()=>[(0,a.Uk)("深入 > 架构 > 核心流程与 Hooks")])),_:1})])])])]),un,yn,(0,a._)("div",hn,[vn,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[mn,(0,a._)("li",null,[gn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:(0,a.w5)((()=>[(0,a.Uk)("深入 > 架构 > 核心流程与 Hooks")])),_:1})])])])]),Cn,bn,(0,a._)("div",kn,[En,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[An,(0,a._)("li",null,[_n,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:(0,a.w5)((()=>[(0,a.Uk)("深入 > 架构 > 核心流程与 Hooks")])),_:1})])])])]),fn,Pn,xn,(0,a._)("div",Fn,[Bn,(0,a.Wm)(Xs)]),wn,(0,a._)("div",Un,[zn,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Uk)("参考： "),(0,a._)("ul",null,[Rn,(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/advanced/cookbook/adding-extra-pages.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("Cookbook > 添加额外页面")])),_:1})])])])]),In,Wn,(0,a._)("ul",null,[Mn,(0,a._)("li",null,[Ln,Hn,(0,a._)("p",null,[(0,a.Uk)("Page Key 会被用作页面路由的 "),(0,a._)("a",Nn,[(0,a.Uk)("name"),(0,a.Wm)(Qs)]),(0,a.Uk)("。")])]),(0,a._)("li",null,[Vn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/components.html#content"},{default:(0,a.w5)((()=>[(0,a.Uk)("Built-in Components > Content")])),_:1})])])])]),Sn,(0,a._)("ul",null,[Tn,jn,(0,a._)("li",null,[On,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:(0,a.w5)((()=>[(0,a.Uk)("指南 > 页面 > 路由")])),_:1})]),qn])])]),Gn,(0,a._)("ul",null,[Kn,$n,(0,a._)("li",null,[Jn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html#title"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter > title")])),_:1})])])])]),Zn,(0,a._)("ul",null,[Qn,(0,a._)("li",null,[Xn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html#title"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter > lang")])),_:1})])])])]),Yn,(0,a._)("ul",null,[ns,ss,(0,a._)("li",null,[es,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter")])),_:1})])])])]),as,(0,a._)("div",ls,[ps,(0,a.Wm)(Xs)]),os,rs,(0,a._)("div",ts,[is,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[cs,(0,a._)("li",null,[ds,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/config.html#markdown-extractheaders"},{default:(0,a.w5)((()=>[(0,a.Uk)("配置 > markdown.extractHeaders")])),_:1})])])])]),Ds,us,(0,a._)("div",ys,[hs,(0,a.Wm)(Xs)]),(0,a._)("ul",null,[vs,(0,a._)("li",null,[ms,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/client-api.html#usepagedata"},{default:(0,a.w5)((()=>[(0,a.Uk)("客户端 API > usePageData")])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/plugin-api.html#extendspage"},{default:(0,a.w5)((()=>[(0,a.Uk)("插件 API > extendsPage")])),_:1})])])])]),gs,(0,a._)("ul",null,[Cs,(0,a._)("li",null,[bs,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html#date"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter > date")])),_:1})])])])]),ks,(0,a._)("ul",null,[Es,As,(0,a._)("li",null,[_s,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/config.html#markdown-importcode"},{default:(0,a.w5)((()=>[(0,a.Uk)("配置 > markdown.importCode")])),_:1})])])])]),fs,(0,a._)("ul",null,[Ps,xs,(0,a._)("li",null,[Fs,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/config.html#markdown-hoisttags"},{default:(0,a.w5)((()=>[(0,a.Uk)("配置 > markdown.hoistTags")])),_:1})])])])]),Bs,ws,(0,a._)("div",Us,[zs,(0,a.Wm)(Xs)]),Rs,Is,(0,a._)("ul",null,[Ws,(0,a._)("li",null,[Ms,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:(0,a.w5)((()=>[(0,a.Uk)("指南 > 页面 > 路由")])),_:1})]),Ls])])]),Hs,(0,a._)("ul",null,[Ns,(0,a._)("li",null,[Vs,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/config.html#locales"},{default:(0,a.w5)((()=>[(0,a.Uk)("配置 > locales")])),_:1})])])])]),Ss,(0,a._)("ul",null,[Ts,js,(0,a._)("li",null,[Os,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html#permalink"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter > permalink")])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html#permalinkpattern"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter > permalinkPattern")])),_:1})])])])]),qs,(0,a._)("ul",null,[Gs,Ks,(0,a._)("li",null,[$s,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ys,{to:"/zh/vuepress-next/reference/frontmatter.html#routemeta"},{default:(0,a.w5)((()=>[(0,a.Uk)("Frontmatter > routeMeta")])),_:1})]),(0,a._)("li",null,[(0,a._)("a",Js,[(0,a.Uk)("vue-router > API 参考 > RouteRecordRaw > meta"),(0,a.Wm)(Qs)])])])])]),Zs])}]])}}]);