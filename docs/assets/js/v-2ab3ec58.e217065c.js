"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1672],{42607:(e,s,n)=>{n.r(s),n.d(s,{data:()=>a});const a=JSON.parse('{"key":"v-2ab3ec58","path":"/vuepress-next/reference/plugin/theme-data.html","title":"theme-data","lang":"en-US","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[]},{"level":2,"title":"Options","slug":"options","link":"#options","children":[{"level":3,"title":"themeData","slug":"themedata","link":"#themedata","children":[]}]},{"level":2,"title":"Composition API","slug":"composition-api","link":"#composition-api","children":[{"level":3,"title":"useThemeData","slug":"usethemedata","link":"#usethemedata","children":[]},{"level":3,"title":"useThemeLocaleData","slug":"usethemelocaledata","link":"#usethemelocaledata","children":[]}]}],"git":{"createdTime":1635758933000,"updatedTime":1635758933000,"contributors":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn","commits":1}]},"copyright":"","filePathRelative":"vuepress-next/reference/plugin/theme-data.md","content":"# theme-data\\n\\n<NpmBadge package=\\"@vuepress/plugin-theme-data\\" />\\n\\nProvide client data for your theme, with VuePress [i18n](../../guide/i18n.md) support.\\n\\nThis plugin is mainly used to develop themes, and has been integrated into the default theme. You won\'t need to use it directly in most cases.\\n\\nFor theme authors, this plugin will help you to use the same i18n mechanism as VuePress and the default theme. But if you don\'t want to provide i18n support, or you want to implement in your own way, you don\'t need this plugin.\\n\\n## Install\\n\\n```bash\\nnpm i -D @vuepress/plugin-theme-data@next\\n```\\n\\n## Options\\n\\n### themeData\\n\\n- Type: `ThemeData`\\n\\n- Default: `{}`\\n\\n- Details:\\n\\n  The theme data object that you want to use in client side.\\n\\n  You can provide theme data in Node side via this option, and use it in client side via [useThemeData](#useThemeData) and [useThemeLocaleData](#useThemeLocaleData).\\n\\n- Example:\\n\\n```js\\nmodule.exports = {\\n  plugins: [\\n    [\\n      \'@vuepress/plugin-theme-data\',\\n      {\\n        themeData: {\\n          foo: \'foo\',\\n          locales: {\\n            \'/zh/\': {\\n              foo: \'zh-foo\',\\n            },\\n          },\\n        },\\n      },\\n    ],\\n  ],\\n}\\n```\\n\\n::: warning\\nThe theme data object will be processed by `JSON.stringify()` before forwarding to client side, so you should ensure that you are providing a JSON-friendly object.\\n:::\\n\\n## Composition API\\n\\n### useThemeData\\n\\n- Details:\\n\\n  Returns the theme data ref object.\\n  \\n  The value is provided by [themeData](#themeData) option.\\n\\n- Example:\\n\\n```ts\\nimport { useThemeData } from \'@vuepress/plugin-theme-data/lib/client\'\\nimport type { ThemeData } from \'@vuepress/plugin-theme-data/lib/client\'\\n\\ntype MyThemeData = ThemeData<{\\n  foo: string\\n}>\\n\\nexport default {\\n  setup() {\\n    const themeData = useThemeData<MyThemeData>()\\n    console.log(themeData.value)\\n  },\\n}\\n```\\n\\n### useThemeLocaleData\\n\\n- Details:\\n\\n  Returns the theme data ref object in current locale.\\n\\n  The properties of current locale has been merged into the root-level properties.\\n\\n- Example:\\n\\n```ts\\nimport { useThemeLocaleData } from \'@vuepress/plugin-theme-data/lib/client\'\\nimport type { ThemeData } from \'@vuepress/plugin-theme-data/lib/client\'\\n\\ntype MyThemeData = ThemeData<{\\n  foo: string\\n}>\\n\\nexport default {\\n  setup() {\\n    const themeLocaleData = useThemeLocaleData<MyThemeData>()\\n    console.log(themeLocaleData.value)\\n  },\\n}\\n```\\n","author":[{"name":"shentuzhigang","email":"shentuzhigang@moresec.cn"}],"top":false,"length":312,"words":312,"readingTime":1.04}')},40048:(e,s,n)=>{n.r(s),n.d(s,{default:()=>f});var a=n(1863);const l=(0,a._)("h1",{id:"theme-data",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#theme-data","aria-hidden":"true"},"#"),(0,a.Uk)(" theme-data")],-1),t=(0,a._)("p",null,"This plugin is mainly used to develop themes, and has been integrated into the default theme. You won’t need to use it directly in most cases.",-1),o=(0,a._)("p",null,"For theme authors, this plugin will help you to use the same i18n mechanism as VuePress and the default theme. But if you don’t want to provide i18n support, or you want to implement in your own way, you don’t need this plugin.",-1),p=(0,a._)("h2",{id:"install",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),(0,a.Uk)(" Install")],-1),i={class:"code-enhance"},r=(0,a.uE)('<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/plugin-theme-data@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),c=(0,a.uE)('<h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="themedata" tabindex="-1"><a class="header-anchor" href="#themedata" aria-hidden="true">#</a> themeData</h3><ul><li><p>Type: <code>ThemeData</code></p></li><li><p>Default: <code>{}</code></p></li><li><p>Details:</p><p>The theme data object that you want to use in client side.</p><p>You can provide theme data in Node side via this option, and use it in client side via <a href="#useThemeData">useThemeData</a> and <a href="#useThemeLocaleData">useThemeLocaleData</a>.</p></li><li><p>Example:</p></li></ul>',3),D={class:"code-enhance"},d=(0,a.uE)('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>\n<span class="line"><span style="color:#D4D4D4;">    [</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">themeData:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">foo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">locales:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#CE9178;">&#39;/zh/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">              </span><span style="color:#9CDCFE;">foo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;zh-foo&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">            },</span></span>\n<span class="line"><span style="color:#D4D4D4;">          },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        },</span></span>\n<span class="line"><span style="color:#D4D4D4;">      },</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),u=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>The theme data object will be processed by <code>JSON.stringify()</code> before forwarding to client side, so you should ensure that you are providing a JSON-friendly object.</p></div><h2 id="composition-api" tabindex="-1"><a class="header-anchor" href="#composition-api" aria-hidden="true">#</a> Composition API</h2><h3 id="usethemedata" tabindex="-1"><a class="header-anchor" href="#usethemedata" aria-hidden="true">#</a> useThemeData</h3><ul><li><p>Details:</p><p>Returns the theme data ref object.</p><p>The value is provided by <a href="#themeData">themeData</a> option.</p></li><li><p>Example:</p></li></ul>',4),h={class:"code-enhance"},m=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">useThemeData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ThemeData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">ThemeData</span><span style="color:#D4D4D4;">&lt;{</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">themeData</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useThemeData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;">&gt;()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">themeData</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),y=(0,a._)("h3",{id:"usethemelocaledata",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#usethemelocaledata","aria-hidden":"true"},"#"),(0,a.Uk)(" useThemeLocaleData")],-1),v=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Returns the theme data ref object in current locale."),(0,a._)("p",null,"The properties of current locale has been merged into the root-level properties.")]),(0,a._)("li",null,[(0,a._)("p",null,"Example:")])],-1),C={class:"code-enhance"},b=(0,a.uE)('<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">useThemeLocaleData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ThemeData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/plugin-theme-data/lib/client&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">ThemeData</span><span style="color:#D4D4D4;">&lt;{</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">themeLocaleData</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useThemeLocaleData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyThemeData</span><span style="color:#D4D4D4;">&gt;()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">themeLocaleData</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),g={},f=(0,n(94598).Z)(g,[["render",function(e,s){const n=(0,a.up)("NpmBadge"),g=(0,a.up)("RouterLink"),f=(0,a.up)("CodeCopyButton");return(0,a.wg)(),(0,a.iD)("div",null,[l,(0,a.Wm)(n,{package:"@vuepress/plugin-theme-data"}),(0,a._)("p",null,[(0,a.Uk)("Provide client data for your theme, with VuePress "),(0,a.Wm)(g,{to:"/vuepress-next/guide/i18n.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("i18n")])),_:1}),(0,a.Uk)(" support.")]),t,o,p,(0,a._)("div",i,[r,(0,a.Wm)(f)]),c,(0,a._)("div",D,[d,(0,a.Wm)(f)]),u,(0,a._)("div",h,[m,(0,a.Wm)(f)]),y,v,(0,a._)("div",C,[b,(0,a.Wm)(f)])])}]])}}]);