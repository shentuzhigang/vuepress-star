const n=JSON.parse('{"key":"v-208e7c52","path":"/zh/presentation.html","title":"Presentation","lang":"zh-CN","frontmatter":{"page":"Presentation","navbar":false,"theme":"moon","head":[["meta",{"name":"og:url","content":"/zh/presentation.html"}],["meta",{"name":"og:site_name","content":"vuepress-theme-star"}],["meta",{"name":"og:title","content":"Presentation"}],["meta",{"name":"og:description","content":""}],["meta",{"name":"og:type","content":"article"}],["meta",{"name":"og:image","content":""}],["meta",{"name":"og:updated_time","content":"2022-05-16T03:15:16.000Z"}],["meta",{"name":"og:locale","content":"zh-CN"}],["meta",{"name":"og:locale:alternate","content":"en-US"}],["meta",{"name":"og:locale:alternate","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"vuepress-theme-star"}],["meta",{"name":"article:author","content":""}],["meta",{"name":"article:published_time","content":""}],["meta",{"name":"article:modified_time","content":"2022-05-16T03:15:16.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Slide Demo","slug":"slide-demo","link":"#slide-demo","children":[]},{"level":2,"title":"Marking Slides","slug":"marking-slides","link":"#marking-slides","children":[]},{"level":2,"title":"Marking Slides","slug":"marking-slides-1","link":"#marking-slides-1","children":[]},{"level":2,"title":"Markdown","slug":"markdown","link":"#markdown","children":[]},{"level":2,"title":"Markdown","slug":"markdown-1","link":"#markdown-1","children":[{"level":3,"title":"This is a H3","slug":"this-is-a-h3","link":"#this-is-a-h3","children":[]}]},{"level":2,"title":"Markdown","slug":"markdown-2","link":"#markdown-2","children":[]},{"level":2,"title":"Markdown","slug":"markdown-3","link":"#markdown-3","children":[]},{"level":2,"title":"Markdown","slug":"markdown-4","link":"#markdown-4","children":[]},{"level":2,"title":"Markdown","slug":"markdown-5","link":"#markdown-5","children":[]},{"level":2,"title":"Layout","slug":"layout","link":"#layout","children":[]},{"level":2,"title":"Layout","slug":"layout-1","link":"#layout-1","children":[]},{"level":2,"title":"Layout","slug":"layout-2","link":"#layout-2","children":[]},{"level":2,"title":"Layout","slug":"layout-3","link":"#layout-3","children":[{"level":3,"title":"Background","slug":"background","link":"#background","children":[]}]},{"level":2,"title":"Fragment","slug":"fragment","link":"#fragment","children":[]},{"level":2,"title":"Fragment","slug":"fragment-1","link":"#fragment-1","children":[]},{"level":2,"title":"Fragment","slug":"fragment-2","link":"#fragment-2","children":[{"level":3,"title":"Animation class","slug":"animation-class","link":"#animation-class","children":[]}]},{"level":2,"title":"Fragment","slug":"fragment-3","link":"#fragment-3","children":[{"level":3,"title":"Animation class","slug":"animation-class-1","link":"#animation-class-1","children":[]}]},{"level":2,"title":"Fragment","slug":"fragment-4","link":"#fragment-4","children":[{"level":3,"title":"Mutiple fragments","slug":"mutiple-fragments","link":"#mutiple-fragments","children":[]}]},{"level":2,"title":"Fragment","slug":"fragment-5","link":"#fragment-5","children":[{"level":3,"title":"Order","slug":"order","link":"#order","children":[]}]},{"level":2,"title":"Transition","slug":"transition","link":"#transition","children":[]},{"level":2,"title":"Transition","slug":"transition-1","link":"#transition-1","children":[]},{"level":2,"title":"Transition","slug":"transition-2","link":"#transition-2","children":[{"level":3,"title":"Auto animate","slug":"auto-animate","link":"#auto-animate","children":[]}]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[]},{"level":2,"title":"Functions","slug":"functions-1","link":"#functions-1","children":[{"level":3,"title":"Code","slug":"code","link":"#code","children":[]}]},{"level":2,"title":"Functions","slug":"functions-2","link":"#functions-2","children":[{"level":3,"title":"Overview","slug":"overview","link":"#overview","children":[]}]},{"level":2,"title":"Functions","slug":"functions-3","link":"#functions-3","children":[{"level":3,"title":"Full Screen","slug":"full-screen","link":"#full-screen","children":[]}]},{"level":2,"title":"Functions","slug":"functions-4","link":"#functions-4","children":[{"level":3,"title":"Zoom","slug":"zoom","link":"#zoom","children":[]}]},{"level":2,"title":"The End","slug":"the-end","link":"#the-end","children":[]}],"git":{"createdTime":1639832388000,"updatedTime":1652670916000,"contributors":[{"name":"Starzkg","email":"1600337300@qq.com","commits":2},{"name":"shentuzhigang","email":"shentuzhigang@shentuzhigang.cn","commits":1}]},"copyright":"Copyright Â© 2021-present Starzkg","filePathRelative":"zh/presentation.md","content":"---\\npage: Presentation\\nnavbar: false\\ntheme: moon\\n---\\n# Presentation\\n\\n---\\n\\n<!-- .slide: data-transition=\\"slide\\" -->\\n\\n## Slide Demo\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\nA simple slide demo and useful hints.\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n> By Mr.Hope. Please scroll mousewheel down to the next slide\\n\\n---\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Marking Slides\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n[ðŸ‘‡](#/1/1)\\n\\n--\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Marking Slides\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\nUse `---` to mark horizontal slides\\n\\n<!-- .element: class=\\"fragment fade-in\\" -->\\n\\nUse `--` to sperate vertical slides in a horizontal slide.\\n\\n<!-- .element: class=\\"fragment fade-in\\" -->\\n\\nUse `<!-- .slide: ... -->` to add attributes to slide\\n\\n<!-- .element: class=\\"fragment fade-in\\" -->\\n\\nUse `<!-- .element: ... -->` to add attributes to the previous HTML element\\n\\n<!-- .element: class=\\"fragment fade-in\\" -->\\n\\n---\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Markdown\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\nYou can use all kinds of markup in slides.\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Markdown\\n\\nYou can use all kinds of markup in slides.\\n\\n### This is a H3\\n\\nHeadings will transform to UPPERCASE by default.\\n\\nHere is paragraph with some **bold**, _italic_, ~~strikethrough~~ text and a [link](https://mrhope.site), and it can auto break itself so you dont need to worry the length.\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Markdown\\n\\nYou can use all kinds of markup in slides.\\n\\nList is `inline-block` by default.\\n\\n- Item\\n- Item\\n- Item\\n\\n1. Item 1\\n1. Item 2\\n1. Item 3\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Markdown\\n\\nYou can use all kinds of markup in slides.\\n\\nCode block will get auto highlight if you enable `highlight` plugin.\\n\\n```js\\nconst a = 1;\\n```\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Markdown\\n\\nYou can use all kinds of markup in slides.\\n\\nYou can also write math equation using tex syntax if you enable `math` plugin.\\n\\n$$\\nJ(\\\\theta_0,\\\\theta_1) = \\\\sum_{i=0}\\n$$\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Markdown\\n\\nYou can use all kinds of markup in slides.\\n\\nâš **Note**: Table, hr and other unstandard Markdown syntax is not supported.\\n\\n---\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Layout\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n--\\n\\n<!-- .slide: data-auto-animate  -->\\n\\n## Layout\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\nðŸ‘† The `r-fit-text` class makes text as large as possible without overflowing the slide.\\n\\n--\\n\\n<!-- .slide: data-auto-animate  -->\\n\\n## Layout\\n\\n![Logo](/images/logo.png)\\n\\n<!-- .element: class=\\"r-stretch\\" -->\\n\\nðŸ‘† The `r-stretch` class helper lets you resize an element, like an image or video, to cover the remaining vertical space in a slide.\\n\\n--\\n\\n<!-- .slide: data-auto-animate data-background-color=\\"rgb(70, 70, 255)\\" -->\\n\\n## Layout\\n\\n### Background\\n\\nCutom background by adding `data-background` attribute to slide.\\n\\n---\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Fragment\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Fragment\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\nFragments are used to highlight or incrementally reveal individual elements on a slide.\\n\\nAdd `fragment` and animation class to element.\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Fragment\\n\\n### Animation class\\n\\n- `fade-in`\\n<!-- .element: class=\\"fragment fade-in\\" -->\\n\\n- `fade-out`\\n<!-- .element: class=\\"fragment fade-out\\" -->\\n\\n- `fade-up`\\n<!-- .element: class=\\"fragment fade-up\\" -->\\n\\n<!-- list break -->\\n\\n- `fade-down`\\n<!-- .element: class=\\"fragment fade-down\\" -->\\n\\n- `fade-left`\\n<!-- .element: class=\\"fragment fade-left\\" -->\\n\\n- `fade-right`\\n<!-- .element: class=\\"fragment fade-right\\" -->\\n\\n<!-- list break -->\\n\\n- `fade-in-then-out`\\n<!-- .element: class=\\"fragment fade-in-then-out\\" -->\\n\\n- `fade-in-then-semi-out`\\n<!-- .element: class=\\"fragment fade-in-then-semi-out\\" -->\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Fragment\\n\\n### Animation class\\n\\n- `grow`\\n<!-- .element: class=\\"fragment grow\\" -->\\n\\n- `shrink`\\n<!-- .element: class=\\"fragment shrink\\" -->\\n\\n- `strike`\\n<!-- .element: class=\\"fragment strike\\" -->\\n\\n<!-- list break -->\\n\\n- `highlight-red`\\n<!-- .element: class=\\"fragment highlight-red\\" -->\\n\\n- `highlight-green`\\n<!-- .element: class=\\"fragment highlight-green\\" -->\\n\\n- `highlight-blue`\\n<!-- .element: class=\\"fragment highlight-blue\\" -->\\n\\n<!-- list break -->\\n\\n- `highlight-current-red`\\n<!-- .element: class=\\"fragment highlight-current-red\\" -->\\n\\n- `highlight-current-green`\\n<!-- .element: class=\\"fragment highlight-current-green\\" -->\\n\\n- `highlight-current-blue`\\n<!-- .element: class=\\"fragment highlight-current-blue\\" -->\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Fragment\\n\\n### Mutiple fragments\\n\\nMultiple fragments can be applied to the same element sequentially by wrapping it\\n\\n<span class=\\"fragment fade-in\\">\\n  <span class=\\"fragment highlight-red\\">\\n    <span class=\\"fragment fade-out\\">\\n      Fade in > Turn red > Fade out\\n    </span>\\n  </span>\\n</span>\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Fragment\\n\\n### Order\\n\\nOrder can be changed using the `data-fragment-index` attribute.\\n\\nMultiple elements can appear at the same index.\\n\\n- Appears last\\n<!-- .element: class=\\"fragment\\" data-fragment-index=\\"3\\"-->\\n\\n- Appears second\\n<!-- .element: class=\\"fragment\\" data-fragment-index=\\"2\\"-->\\n\\n<!-- list break -->\\n\\n- Appears first\\n<!-- .element: class=\\"fragment\\" data-fragment-index=\\"1\\"-->\\n\\n- Appears second\\n<!-- .element: class=\\"fragment\\" data-fragment-index=\\"2\\"-->\\n\\n---\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Transition\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n--\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Transition\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\nTransition can be changed by setting the `transition` config option globally or `data-transition` attribute on specific slide.\\n\\nPossible values:\\n\\n- none\\n- fade\\n- slide\\n\\n<!-- list break -->\\n\\n- convex\\n- concave\\n- zoom\\n\\n--\\n\\n<!-- .slide: data-auto-animate -->\\n\\n## Transition\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n### Auto animate\\n\\n`data-auto-animate` can be added on nearby slides to make an animation on unchanged elements.\\n\\n---\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Functions\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n--\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Functions\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n### Code\\n\\nBy enabling `highlight` plugin, you can highlight code blocks.\\n\\nYou can use `[a-b|c-d]` syntax to highlight lines by steps.\\n\\n```js [1-2|3|4]\\nlet a = 1;\\nlet b = 2;\\nlet c = (x) => 1 + 2 + x;\\nc(3);\\n```\\n\\n--\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Functions\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n### Overview\\n\\nPress `Esc` or `O` to enter overview mode when the presentation is active\\n\\n--\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Functions\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n### Full Screen\\n\\nPress `F` or `F11` to enter fullscreen when the presentation is active\\n\\n--\\n\\n<!-- .slide: data-transition=\\"slide\\" data-auto-animate -->\\n\\n## Functions\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n### Zoom\\n\\nHold down the `alt` key (`ctrl` in Linux) and click on any element to zoom towards it.\\n\\nClick again to zoom back out.\\n\\n---\\n\\n<!-- .element: class=\\"r-fit-text\\" -->\\n\\n## The End\\n\\n\\n","author":[{"name":"Starzkg","email":"1600337300@qq.com"},{"name":"shentuzhigang","email":"shentuzhigang@shentuzhigang.cn"}],"top":false,"length":966,"words":966,"readingTime":3.22}');export{n as data};
